{
  "version": 3,
  "sources": ["../../index.js", "index.js"],
  "sourcesContent": ["/* global HTMLInputElement HTMLOptionElement Text Element */\nconst s = Symbol.for('skruvDom')\n/**\n * @typedef {Vnode|Vnode[]|String|Boolean|Number} SkruvChildNode\n * @typedef {SkruvChildNode[]} SkruvChildNodes\n */\n/**\n * @typedef {object} Vnode\n * @prop {Symbol} s\n * @prop {String} t\n * @prop {SkruvChildNodes} c\n * @prop {Record<string,(string|boolean|Function|number|Object)>} a\n * @prop {{_r:() => boolean}} [_r]\n */\n/** @type {Vnode} */\nexport const Vnode = { s, t: '', c: [], a: {} }\n/**\n * @param {string} t\n * @param  {(Record<string, any>|Vnode)[]} c\n * @returns {Vnode}\n */\n// @ts-ignore\nexport const h = (t, ...c) => ({\n  s,\n  t: t.toUpperCase(),\n  ...(\n    typeof c[0] === 'object' &&\n      !Array.isArray(c[0]) &&\n      !(c[0] instanceof Function) &&\n      // @ts-ignore: its exactly because we don't know if its there that we check it\n      !(c[0]?.[Symbol.asyncIterator]) &&\n      c[0]?.s !== s\n      ? {\n        a: c[0],\n        c: c.slice(1)\n      }\n      : {\n        a: {},\n        c: c\n      }\n  )\n})\n\n/** @type {WeakMap<Vnode, Node>} */\nconst keyed = new WeakMap()\n/** @type {Record<string, Node>} */\nconst domCache = {}\n/**\n * @param {Vnode} current\n * @param {Node} _currentNode\n * @param {ParentNode?} parentNode\n * @param {*} isSvg\n * @returns {boolean}\n */\nexport const render = (\n  current,\n  _currentNode = globalThis.document.documentElement,\n  parentNode = _currentNode?.parentNode,\n  isSvg = false\n) => {\n  if (typeof current === 'boolean' || current === null) { return true }\n  if (!parentNode || !parentNode.ownerDocument) { throw new Error('no parentNode!') }\n  if (!globalThis.document.documentElement.contains(parentNode)) { return false }\n  let currentNode = _currentNode\n  /** @type {ChildNode[]} */\n  let childNodes = []\n  const nodeName = currentNode?.nodeName\n  if (!currentNode || (nodeName !== current.t && ((typeof current === 'string' || typeof current === 'number') && nodeName !== '#text'))) {\n    if (typeof current === 'string' || typeof current === 'number') {\n      currentNode = (domCache.text || (domCache.text = parentNode.ownerDocument.createTextNode(''))).cloneNode()\n    } else if (isSvg || current.t === 'svg') {\n      currentNode = (domCache[current.t] || (domCache[current.t] = parentNode.ownerDocument.createElementNS('http://www.w3.org/2000/svg', current.t))).cloneNode()\n    } else {\n      currentNode = (domCache[current.t] || (domCache[current.t] = parentNode.ownerDocument.createElement(current.t))).cloneNode()\n    }\n    if (_currentNode) {\n      parentNode.replaceChild(currentNode, _currentNode)\n    } else {\n      parentNode.appendChild(currentNode)\n    }\n  } else {\n    childNodes = Array.from(currentNode.childNodes)\n  }\n  if (currentNode instanceof Text && (typeof current === 'string' || typeof current === 'number')) {\n    // @ts-ignore: We already checked this above. It's not 'never'\n    if (currentNode.data.toString() !== current.toString()) {\n      currentNode.data = current\n    }\n    return true\n  }\n  if (!(currentNode instanceof Element) || typeof current !== 'object') { return true }\n  if (current._r) { current._r._r = () => render(current, currentNode, parentNode, isSvg) }\n  for (const key in current.a) {\n    if (key[0] === '_') { continue }\n    if (key[0] === 'o' && key[1] === 'n') {\n      // @ts-ignore: TODO: this is a hacky way to store what the last eventlistener was\n      if (!currentNode['data-event-' + key] || currentNode['data-event-' + key]?.toString() !== current.a[key]?.toString()) {\n        // @ts-ignore\n        if (currentNode['data-event-' + key]) { currentNode.removeEventListener(key.slice(2), currentNode['data-event-' + key]) }\n        // @ts-ignore\n        currentNode.addEventListener(key.slice(2), current.a[key])\n        // @ts-ignore\n        currentNode['data-event-' + key] = current.a[key]\n      } else if (!current.a[key]) {\n        // @ts-ignore: data-event-* is the old function\n        currentNode.removeEventListener(key.slice(2), currentNode['data-event-' + key])\n      }\n    } else if (current.a[key] !== currentNode.getAttribute(key)) {\n      if (\n        (\n          typeof current.a[key] === 'boolean' &&\n          (\n            (currentNode instanceof HTMLInputElement && key === 'checked') ||\n            (currentNode instanceof HTMLOptionElement && key === 'selected')\n          )\n        ) || typeof current.a[key] === 'object' // Support complex data passing for custom elements\n      ) {\n        // @ts-ignore TS does not think HTML properties are accessible directly?\n        currentNode[key] = current.a[key]\n      }\n      if (current.a[key]) {\n        currentNode.setAttribute(key, current.a[key].toString())\n      } else {\n        currentNode.removeAttribute(key)\n      }\n    }\n  }\n  const children = current.c.flat(Infinity)\n  if (!children.length && childNodes.length) {\n    currentNode.replaceChildren()\n    return true\n  }\n  if (childNodes.length > children.length) {\n    for (let i = children.length; i < childNodes.length; i++) {\n      currentNode.removeChild(childNodes[i])\n    }\n  }\n  for (let i = 0; i < children.length; i++) {\n    // @ts-ignore: TODO: the flattening seems to confuse TS\n    if (keyed.has(children[i])) {\n      // @ts-ignore\n      const keyedNode = keyed.get(children[i])\n      if (keyedNode && keyedNode !== currentNode.childNodes[i]) {\n        if (keyedNode === currentNode.childNodes[i + 1]) {\n          currentNode.removeChild(currentNode.childNodes[i])\n        // @ts-ignore\n        } else if (keyed.has(children[i + 1]) && keyed.get(children[i + 1]) === currentNode.childNodes[i]) {\n          currentNode.insertBefore(keyedNode, currentNode.childNodes[i])\n        } else if (currentNode.childNodes[i]) {\n          currentNode.replaceChild(keyedNode, currentNode.childNodes[i])\n        } else {\n          currentNode.appendChild(keyedNode)\n        }\n        keyed.set(current, currentNode)\n      }\n      continue\n    }\n    // @ts-ignore: TODO: the flattening seems to confuse TS\n    render(children[i], childNodes[i] || false, currentNode, isSvg)\n  }\n  keyed.set(current, currentNode)\n  return true\n}\n\nexport const elementFactory = new Proxy({}, {\n  /** @type {(_: any, name: string) => (arg0: (Record<string, any>|Vnode)[]) => Vnode} */\n  get: (_, name) => (...c) => h(name, ...c)\n})\n", "import { elementFactory, render } from '../../index.js'\n\nconst { html, head, title, meta, body, main, h1, form, input, button, ol, li, a, style } = elementFactory\n\nconst state = {\n  todos: ['Write todos']\n}\n\nconst styles = /* css */`:scope{color:#f1f1f1;background:#0f0f0f}body{max-width:40ch;margin:0 auto}form{display:flex}input{flex:1}a{color:#9b9b9b}`\n\nconst doRender = () => render(\n  html({ lang: 'en-US' },\n    head(\n      title(state.todos[0]),\n      meta({ name: 'viewport', content: 'width=device-width, initial-scale=1' }),\n      style(styles)\n    ),\n    body(\n      main(\n        h1(state.todos[0]),\n        form({\n          onsubmit: e => {\n            e.preventDefault()\n            state.todos.unshift(new FormData(e.target).get('todo'))\n            e.target.reset()\n            doRender()\n          }\n        },\n        input({\n          name: 'todo'\n        }),\n        button('New!')\n        ),\n        ol(\n          state.todos.map((todo, i) => li(\n            `${todo} `,\n            a({\n              href: '#',\n              onclick: e => {\n                e.preventDefault()\n                state.todos.splice(i, 1)\n                doRender()\n              }\n            }, 'x')\n          ))\n        )\n      )\n    )\n  )\n)\ndoRender()\n"],
  "mappings": "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",
  "names": ["s", "h", "t", "c", "_a", "_b", "s", "keyed", "domCache", "render", "current", "_currentNode", "parentNode", "isSvg", "currentNode", "childNodes", "nodeName", "key", "children", "i", "keyedNode", "elementFactory", "_", "name", "html", "head", "title", "meta", "body", "main", "h1", "form", "input", "button", "ol", "li", "a", "style", "elementFactory", "state", "styles", "doRender", "render", "e", "todo"]
}
