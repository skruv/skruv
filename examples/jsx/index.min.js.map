{
  "version": 3,
  "sources": ["../../index.js", "../../utils/jsx-runtime.js", "index.jsx"],
  "sourcesContent": ["/* global HTMLInputElement HTMLOptionElement Text Element */\nconst s = Symbol.for('skruvDom')\n/**\n * @typedef {Vnode|Vnode[]|String|Boolean|Number} SkruvChildNode\n * @typedef {SkruvChildNode[]} SkruvChildNodes\n */\n/**\n * @typedef {object} Vnode\n * @prop {Symbol} s\n * @prop {String} t\n * @prop {SkruvChildNodes} c\n * @prop {Record<string,(string|boolean|Function|number|Object)>} a\n * @prop {{_r:() => boolean}} [_r]\n */\n/** @type {Vnode} */\nexport const Vnode = { s, t: '', c: [], a: {} }\n/**\n * @param {string} t\n * @param  {(Record<string, any>|Vnode)[]} c\n * @returns {Vnode}\n */\n// @ts-ignore\nexport const h = (t, ...c) => ({\n  s,\n  t: t.toUpperCase(),\n  ...(\n    typeof c[0] === 'object' &&\n      !Array.isArray(c[0]) &&\n      !(c[0] instanceof Function) &&\n      // @ts-ignore: its exactly because we don't know if its there that we check it\n      !(c[0]?.[Symbol.asyncIterator]) &&\n      c[0]?.s !== s\n      ? {\n        a: c[0],\n        c: c.slice(1)\n      }\n      : {\n        a: {},\n        c: c\n      }\n  )\n})\n\n/** @type {WeakMap<Vnode, Node>} */\nconst keyed = new WeakMap()\n/** @type {Record<string, Node>} */\nconst domCache = {}\n/**\n * @param {Vnode} current\n * @param {Node} _currentNode\n * @param {ParentNode?} parentNode\n * @param {*} isSvg\n * @returns {boolean}\n */\nexport const render = (\n  current,\n  _currentNode = globalThis.document.documentElement,\n  parentNode = _currentNode?.parentNode,\n  isSvg = false\n) => {\n  if (typeof current === 'boolean' || current === null) { return true }\n  if (!parentNode || !parentNode.ownerDocument) { throw new Error('no parentNode!') }\n  if (!globalThis.document.documentElement.contains(parentNode)) { return false }\n  let currentNode = _currentNode\n  /** @type {ChildNode[]} */\n  let childNodes = []\n  const nodeName = currentNode?.nodeName\n  if (!currentNode || (nodeName !== current.t && ((typeof current === 'string' || typeof current === 'number') && nodeName !== '#text'))) {\n    if (typeof current === 'string' || typeof current === 'number') {\n      currentNode = (domCache.text || (domCache.text = parentNode.ownerDocument.createTextNode(''))).cloneNode()\n    } else if (isSvg || current.t === 'svg') {\n      currentNode = (domCache[current.t] || (domCache[current.t] = parentNode.ownerDocument.createElementNS('http://www.w3.org/2000/svg', current.t))).cloneNode()\n    } else {\n      currentNode = (domCache[current.t] || (domCache[current.t] = parentNode.ownerDocument.createElement(current.t))).cloneNode()\n    }\n    if (_currentNode) {\n      parentNode.replaceChild(currentNode, _currentNode)\n    } else {\n      parentNode.appendChild(currentNode)\n    }\n  } else {\n    childNodes = Array.from(currentNode.childNodes)\n  }\n  if (currentNode instanceof Text && (typeof current === 'string' || typeof current === 'number')) {\n    // @ts-ignore: We already checked this above. It's not 'never'\n    if (currentNode.data.toString() !== current.toString()) {\n      currentNode.data = current\n    }\n    return true\n  }\n  if (!(currentNode instanceof Element) || typeof current !== 'object') { return true }\n  if (current._r) { current._r._r = () => render(current, currentNode, parentNode, isSvg) }\n  for (const key in current.a) {\n    if (key[0] === '_') { continue }\n    if (key[0] === 'o' && key[1] === 'n') {\n      // @ts-ignore: TODO: this is a hacky way to store what the last eventlistener was\n      if (!currentNode['data-event-' + key] || currentNode['data-event-' + key]?.toString() !== current.a[key]?.toString()) {\n        // @ts-ignore\n        if (currentNode['data-event-' + key]) { currentNode.removeEventListener(key.slice(2), currentNode['data-event-' + key]) }\n        // @ts-ignore\n        currentNode.addEventListener(key.slice(2), current.a[key])\n        // @ts-ignore\n        currentNode['data-event-' + key] = current.a[key]\n      } else if (!current.a[key]) {\n        // @ts-ignore: data-event-* is the old function\n        currentNode.removeEventListener(key.slice(2), currentNode['data-event-' + key])\n      }\n    } else if (current.a[key] !== currentNode.getAttribute(key)) {\n      if (\n        (\n          typeof current.a[key] === 'boolean' &&\n          (\n            (currentNode instanceof HTMLInputElement && key === 'checked') ||\n            (currentNode instanceof HTMLOptionElement && key === 'selected')\n          )\n        ) || typeof current.a[key] === 'object' // Support complex data passing for custom elements\n      ) {\n        // @ts-ignore TS does not think HTML properties are accessible directly?\n        currentNode[key] = current.a[key]\n      }\n      if (current.a[key]) {\n        currentNode.setAttribute(key, current.a[key].toString())\n      } else {\n        currentNode.removeAttribute(key)\n      }\n    }\n  }\n  const children = current.c.flat(Infinity)\n  if (!children.length && childNodes.length) {\n    currentNode.replaceChildren()\n    return true\n  }\n  if (childNodes.length > children.length) {\n    for (let i = children.length; i < childNodes.length; i++) {\n      currentNode.removeChild(childNodes[i])\n    }\n  }\n  for (let i = 0; i < children.length; i++) {\n    // @ts-ignore: TODO: the flattening seems to confuse TS\n    if (keyed.has(children[i])) {\n      // @ts-ignore\n      const keyedNode = keyed.get(children[i])\n      if (keyedNode && keyedNode !== currentNode.childNodes[i]) {\n        if (keyedNode === currentNode.childNodes[i + 1]) {\n          currentNode.removeChild(currentNode.childNodes[i])\n        // @ts-ignore\n        } else if (keyed.has(children[i + 1]) && keyed.get(children[i + 1]) === currentNode.childNodes[i]) {\n          currentNode.insertBefore(keyedNode, currentNode.childNodes[i])\n        } else if (currentNode.childNodes[i]) {\n          currentNode.replaceChild(keyedNode, currentNode.childNodes[i])\n        } else {\n          currentNode.appendChild(keyedNode)\n        }\n        keyed.set(current, currentNode)\n      }\n      continue\n    }\n    // @ts-ignore: TODO: the flattening seems to confuse TS\n    render(children[i], childNodes[i] || false, currentNode, isSvg)\n  }\n  keyed.set(current, currentNode)\n  return true\n}\n\nexport const elementFactory = new Proxy({}, {\n  /** @type {(_: any, name: string) => (arg0: (Record<string, any>|Vnode)[]) => Vnode} */\n  get: (_, name) => (...c) => h(name, ...c)\n})\n", "/** @typedef {typeof import(\"../index.js\").Vnode} Vnode */\n/** @typedef {Record<string,(string|boolean|Function|number|Object)>} VnodeAtrributes */\n\nimport { h } from '../index.js'\n\n/**\n * @typedef {Object} JSXAdditionalProperties\n * @property {[Vnode]} [children]\n *\n * @typedef {VnodeAtrributes & JSXAdditionalProperties} JSXAttributes\n */\n\n/**\n * @param {String} str\n * @returns {String}\n */\nconst kebabize = str => str.replace(/[A-Z]+(?![a-z])|[A-Z]/g, ($, ofs) => (ofs ? '-' : '') + $.toLowerCase())\n\nexport const Fragment = '#fragment'\n\n/**\n * @param {String} nodeName\n * @param {JSXAttributes} [attributes={}]\n * @returns {Vnode | [Vnode?]}\n */\nexport const jsx = (nodeName, attributes = {}) => jsxs(nodeName, attributes)\n\n/**\n * @param {String} nodeName\n * @param {JSXAttributes} [attributes={}]\n * @returns {Vnode | [Vnode?]}\n */\nexport const jsxs = (nodeName, attributes = {}) => {\n  if (nodeName === Fragment && attributes.children) { return attributes.children }\n  if (nodeName === Fragment) { return [] }\n  const { children, ...attrs } = attributes\n  Object.keys(attrs).filter(e => e !== kebabize(e))\n    .forEach(e => {\n      attrs[kebabize(e)] = attrs[e]\n      delete attrs[e]\n    })\n  if (attrs['class-name']) {\n    attrs.class = attrs['class-name']\n    delete attrs['class-name']\n  }\n  if (attrs['html-for']) {\n    attrs.for = attrs['html-for']\n    delete attrs['html-for']\n  }\n  if (children) { return h(nodeName, attrs || {}, children) }\n  return h(nodeName, attrs || {})\n}\n", "import { render } from 'skruv'\n\nconst styles = /* css */`:root{color:#fff;background:#0f0f0f}`\n\nrender(\n  <html lang=\"en-US\">\n    {/* Fragments work too, but are usually not needed. */}\n    <>\n      <head>\n        <title>jsx</title>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n        <style>{styles}</style>\n      </head>\n    </>\n    <body>\n      <div>\n        <p>Hello world</p>\n      </div>\n    </body>\n  </html>\n)\n"],
  "mappings": "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",
  "names": ["s", "h", "c", "_a", "_b", "s", "keyed", "domCache", "render", "current", "_currentNode", "parentNode", "isSvg", "currentNode", "childNodes", "nodeName", "key", "children", "i", "keyedNode", "elementFactory", "_", "name", "kebabize", "str", "$", "ofs", "Fragment", "jsx", "nodeName", "attributes", "jsxs", "children", "attrs", "h", "styles", "render", "jsxs", "jsx", "Fragment"]
}
