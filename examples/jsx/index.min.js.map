{
  "version": 3,
  "sources": ["../../index.js", "../../utils/jsx-runtime.js", "index.jsx"],
  "sourcesContent": ["const s = Symbol.for('skruvDom')\nconst eventPrefix = 'data-event-'\n/**\n * @typedef {Vnode|Vnode[]|String|Boolean|Number} SkruvChildNode\n * @typedef {SkruvChildNode[]} SkruvChildNodes\n */\n/**\n * @typedef {object} Vnode\n * @prop {Symbol} s\n * @prop {String} t\n * @prop {SkruvChildNodes} c\n * @prop {Record<string,(string|boolean|Function|number|Object)> & {_r:{_r:() => boolean}?}} a\n * @prop {{_r:() => boolean}} [_r]\n */\n/** @type {Vnode} */\nexport const Vnode = { s, t: '', c: [], a: { _r: { _r: () => false } } }\n/**\n * @param {string} t\n * @param  {(Record<string, any>|Vnode)[]} c\n * @returns {Vnode}\n */\n// @ts-ignore: TODO: The check for non-attribute objects does not satisfy TS\nexport const h = (t, ...c) => ({\n  s,\n  t: t.toUpperCase(),\n  ...(\n    // @ts-ignore: its exactly because we don't know if its there that we check it\n    !(c[0]?.[Symbol.asyncIterator]) &&\n        c[0]?.constructor === Object &&\n      c[0]?.s !== s\n      ? {\n        a: c[0],\n        c: c.slice(1)\n      }\n      : {\n        a: {},\n        c: c\n      }\n  )\n})\n\n/** @type {WeakMap<Vnode, Node>} */\nconst keyed = new WeakMap()\n/** @type {Record<string, Node>} */\nconst domCache = {}\n/**\n * @param {Vnode} current\n * @param {Node} _currentNode\n * @param {ParentNode?} parentNode\n * @param {*} isSvg\n * @returns {boolean}\n */\nexport const render = (\n  current,\n  _currentNode = globalThis.document.documentElement,\n  parentNode = _currentNode.parentNode,\n  isSvg = false,\n  doc = (parentNode?.ownerDocument || _currentNode?.ownerDocument)\n) => {\n  let currentNode = _currentNode\n  /** @type {ChildNode[]|NodeList} */\n  let childNodes = []\n  if (!parentNode || !doc || (currentNode && !parentNode.contains(currentNode))) { return false }\n  if (typeof current === 'boolean' || current === null || current === undefined) {\n    if (currentNode) { parentNode.removeChild(currentNode) }\n    return true\n  }\n  if (\n    !currentNode ||\n    (\n      ((typeof current === 'string' || typeof current === 'number') && currentNode?.nodeName !== '#text') ||\n      (current?.t && currentNode?.nodeName !== current?.t)\n    )\n  ) {\n    if (typeof current === 'string' || typeof current === 'number') {\n      currentNode = (domCache.text || (domCache.text = doc.createTextNode(''))).cloneNode()\n    } else if (isSvg || current.t === 'svg') {\n      currentNode = (domCache[current.t] || (domCache[current.t] = doc.createElementNS('http://www.w3.org/2000/svg', current.t))).cloneNode()\n    } else {\n      currentNode = (domCache[current.t] || (domCache[current.t] = doc.createElement(current.t))).cloneNode()\n    }\n    if (_currentNode) {\n      parentNode.replaceChild(currentNode, _currentNode)\n    } else {\n      parentNode.appendChild(currentNode)\n    }\n  } else {\n    childNodes = currentNode.childNodes\n  }\n  if ((typeof current === 'string' || typeof current === 'number')) {\n    // @ts-ignore: We already checked this above. It's not 'never'\n    if (('' + currentNode.data) !== ('' + current)) { currentNode.data = current }\n    return true\n  }\n  if (current._r) { current._r._r = () => render(current, currentNode, parentNode, isSvg) }\n  for (const key in current.a) {\n    if (key[0] === '_') { continue }\n    if (key[0] === 'o' && key[1] === 'n') {\n      // @ts-ignore: TODO: this is a hacky way to store what the last eventlistener was\n      if (!currentNode[eventPrefix + key] || ('' + currentNode[eventPrefix + key]) !== ('' + current.a[key])) {\n        // @ts-ignore: See above\n        if (currentNode[eventPrefix + key]) { currentNode.removeEventListener(key.slice(2), currentNode[eventPrefix + key]) }\n        // @ts-ignore: See above\n        currentNode.addEventListener(key.slice(2), current.a[key])\n        // @ts-ignore: See above\n        currentNode[eventPrefix + key] = current.a[key]\n      } else if (!current.a[key]) {\n        // @ts-ignore: data-event-* is the old function\n        currentNode.removeEventListener(key.slice(2), currentNode[eventPrefix + key])\n      }\n    // @ts-ignore: If this was a text or comment element we would have returned above\n    } else if (current.a[key] !== currentNode.getAttribute(key)) {\n      if (\n        (\n          typeof current.a[key] === 'boolean' &&\n          (\n            (current.t === 'INPUT' && key === 'checked') ||\n            (current.t === 'OPTION' && key === 'selected')\n          )\n        ) || typeof current.a[key] === 'object' // Support complex data passing for custom elements\n      ) {\n        // @ts-ignore TS does not think HTML properties are accessible directly?\n        currentNode[key] = current.a[key]\n      }\n      if (current.a[key]) {\n        // @ts-ignore: If this was a text or comment element we would have returned above\n        currentNode.setAttribute(key, '' + current.a[key])\n      } else {\n        // @ts-ignore: If this was a text or comment element we would have returned above\n        currentNode.removeAttribute(key)\n      }\n    }\n  }\n  const children = current.c.flat(Infinity)\n  if (!children.length && childNodes.length) {\n    // @ts-ignore: If this was a text or comment element we would have returned above\n    currentNode.replaceChildren()\n    return true\n  }\n  if (childNodes.length > children.length) {\n    for (let i = children.length; i < childNodes.length; i++) {\n      currentNode.removeChild(childNodes[i])\n    }\n  }\n  for (let i = 0; i < children.length; i++) {\n    // @ts-ignore: TODO: the flattening seems to confuse TS\n    if (keyed.has(children[i])) {\n      // @ts-ignore: See above\n      const keyedNode = keyed.get(children[i])\n      if (keyedNode && keyedNode !== childNodes[i]) {\n        if (keyedNode === childNodes[i + 1]) {\n          currentNode.removeChild(childNodes[i])\n        // @ts-ignore: See above\n        } else if (keyed.has(children[i + 1]) && keyed.get(children[i + 1]) === childNodes[i]) {\n          currentNode.insertBefore(keyedNode, childNodes[i])\n        } else if (childNodes[i]) {\n          currentNode.replaceChild(keyedNode, childNodes[i])\n        } else {\n          currentNode.appendChild(keyedNode)\n        }\n        // @ts-ignore: See above\n        keyed.set(children[i], childNodes[i])\n      }\n      continue\n    }\n    // @ts-ignore: See above\n    render(children[i], childNodes[i] || false, currentNode, isSvg)\n  }\n  keyed.set(current, currentNode)\n  return true\n}\n\nexport const elementFactory = new Proxy({}, {\n  /** @type {(_: any, name: string) => (arg0: (Record<string, any>|Vnode)[]) => Vnode} */\n  get: (_, name) => (...c) => h(name, ...c)\n})\n", "/** @typedef {typeof import(\"../index.js\").Vnode} Vnode */\n/** @typedef {Record<string,(string|boolean|Function|number|Object)>} VnodeAtrributes */\n\nimport { h } from '../index.js'\n\n/**\n * @typedef {Object} JSXAdditionalProperties\n * @property {[Vnode]} [children]\n *\n * @typedef {VnodeAtrributes & JSXAdditionalProperties} JSXAttributes\n */\n\n/**\n * @param {String} str\n * @returns {String}\n */\nconst kebabize = str => str.replace(/[A-Z]+(?![a-z])|[A-Z]/g, ($, ofs) => (ofs ? '-' : '') + $.toLowerCase())\n\nexport const Fragment = '#fragment'\n\n/**\n * @param {String} nodeName\n * @param {JSXAttributes} [attributes={}]\n * @returns {Vnode | [Vnode?]}\n */\nexport const jsx = (nodeName, attributes = {}) => jsxs(nodeName, attributes)\n\n/**\n * @param {String} nodeName\n * @param {JSXAttributes} [attributes={}]\n * @returns {Vnode | [Vnode?]}\n */\nexport const jsxs = (nodeName, attributes = {}) => {\n  if (nodeName === Fragment && attributes.children) { return attributes.children }\n  if (nodeName === Fragment) { return [] }\n  const { children, ...attrs } = attributes\n  Object.keys(attrs).filter(e => e !== kebabize(e))\n    .forEach(e => {\n      attrs[kebabize(e)] = attrs[e]\n      delete attrs[e]\n    })\n  if (attrs['class-name']) {\n    attrs.class = attrs['class-name']\n    delete attrs['class-name']\n  }\n  if (attrs['html-for']) {\n    attrs.for = attrs['html-for']\n    delete attrs['html-for']\n  }\n  if (children) { return h(nodeName, attrs || {}, children) }\n  return h(nodeName, attrs || {})\n}\n", "import { render } from 'skruv'\n\nconst styles = /* css */`:root{color:#fff;background:#0f0f0f}`\n\nrender(\n  <html lang=\"en-US\">\n    {/* Fragments work too, but are usually not needed. */}\n    <>\n      <head>\n        <title>jsx</title>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n        <style>{styles}</style>\n      </head>\n    </>\n    <body>\n      <div>\n        <p>Hello world</p>\n      </div>\n    </body>\n  </html>\n)\n"],
  "mappings": "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",
  "names": ["s", "eventPrefix", "h", "t", "c", "_a", "_b", "_c", "s", "keyed", "domCache", "render", "current", "_currentNode", "parentNode", "isSvg", "doc", "currentNode", "childNodes", "key", "eventPrefix", "children", "i", "keyedNode", "elementFactory", "_", "name", "kebabize", "str", "$", "ofs", "Fragment", "jsx", "nodeName", "attributes", "jsxs", "children", "attrs", "e", "h", "styles", "render", "jsxs", "jsx", "Fragment"]
}
