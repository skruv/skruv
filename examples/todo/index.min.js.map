{
  "version": 3,
  "sources": ["../../node_modules/skruv/skruv.js", "../../node_modules/skruv/utils/css.js", "../../node_modules/skruv/utils/state.js", "../../node_modules/skruv/utils/syncify.js", "../../node_modules/skruv/jsx-runtime.ts", "index.jsx"],
  "sourcesContent": ["const htmlNS = 'http://www.w3.org/1999/xhtml'\nconst svgNS = 'http://www.w3.org/2000/svg'\nconst mathmlNS = 'http://www.w3.org/1998/Math/MathML'\n/** @type {import(\"./utilityTypes\").keyedMap} */\nconst keyed = new WeakMap()\n/** @type {import(\"./utilityTypes\").oldKeysMap} */\nconst oldKeys = new WeakMap()\n/** @type {import(\"./utilityTypes\").attributesMap} */\nconst attributesMap = new WeakMap()\n/** @type {import(\"./utilityTypes\").domCacheObj} */\nconst domCache = {}\n/**\n * @param {import(\"./utilityTypes\").Vnode} current\n * @param {import(\"./utilityTypes\").AnyRealElement} currentNode\n * @param {ParentNode?} parentNode\n * @param {string} ns\n */\nexport const render = (\n  current,\n  // @ts-expect-error\n  currentNode = globalThis.document.documentElement,\n  // @ts-expect-error\n  parentNode = currentNode.parentNode,\n  ns = htmlNS,\n  forceFull = false\n) => {\n  if (!parentNode) {\n    throw new Error('No parent to render to')\n  }\n  if (typeof current === 'boolean') {\n    // @ts-expect-error\n    if (currentNode) { parentNode.removeChild(currentNode) }\n    return\n  }\n  const txtNode = (typeof current === 'string' || typeof current === 'number')\n  if (\n    forceFull ||\n    !currentNode ||\n    (txtNode && currentNode.nodeName !== '#text') ||\n    (!txtNode && currentNode.nodeName.toLowerCase() !== current.t.toLowerCase())\n  ) {\n    const _currentNode = currentNode\n    if (txtNode) {\n      // @ts-expect-error: When this is a textnode we will only use it for text, so this should be fine\n      currentNode = document.createTextNode('' + current)\n    } else {\n      if (current.t === 'svg') { ns = svgNS }\n      if (current.t === 'math') { ns = mathmlNS }\n      // @ts-expect-error: All the nodes are actually elements, since the domCache only contains elements\n      currentNode = (domCache[current.t] || (domCache[current.t] = document.createElementNS(ns, current.t))).cloneNode(false)\n    }\n    if (_currentNode) {\n      // @ts-expect-error\n      parentNode.replaceChild(currentNode, _currentNode)\n    } else {\n      // @ts-expect-error\n      parentNode.appendChild(currentNode)\n    }\n    if (txtNode) { return }\n  }\n  if (txtNode) {\n    // We do a loose comparison to allow for numbers\n    // eslint-disable-next-line eqeqeq\n    if (currentNode.textContent != current) { currentNode.textContent = '' + current }\n    return\n  }\n  if (current.r) {\n    current.r = () => {\n      // @ts-expect-error\n      if (!currentNode || !parentNode.contains(currentNode)) { return false }\n      render(current, currentNode, parentNode, ns)\n      return true\n    }\n  }\n  // This needs to come after the .r callback is registered since it should apply to child nodes, not the current node.\n  if (current.t === 'foreignObject') { ns = htmlNS }\n  /** @type {import(\"./utilityTypes\").Vnode[]} */\n  // @ts-expect-error\n  let children = current.c.flat(Infinity)\n  /** @type {import(\"./utilityTypes\").attributes} */\n  // @ts-expect-error\n  let attributes = {}\n  if (children[0]?.constructor === Object && !children[0]?.isSkruvDom) {\n    // @ts-expect-error\n    attributes = children[0]\n    children = children.slice(1)\n    let oldAttributes = attributesMap.get(currentNode)\n    if (!oldAttributes) {\n      oldAttributes = {}\n      attributesMap.set(currentNode, oldAttributes)\n    }\n    for (const [key, value] of Object.entries(attributes)) {\n      if (('' + oldAttributes[key]) === ('' + value)) { continue }\n      if (key === 'data-skruv-key') { continue }\n      if (key === 'data-skruv-after-create') {\n        // Run after we have processed all the attributes and children\n        setTimeout(() => value(currentNode), 0)\n        oldAttributes[key] = value\n        continue\n      }\n      if (key[0] === 'o' && key[1] === 'n') {\n        const evt = key.slice(2)\n        if (!oldAttributes[key]) {\n          if (oldAttributes[key]) { currentNode.removeEventListener(evt, value) }\n          currentNode.addEventListener(evt, value)\n        } else if (!value) {\n          currentNode.removeEventListener(evt, value)\n        }\n        oldAttributes[key] = value\n        continue\n      }\n      if (\n        (key === 'checked' || key === 'selected' || key === 'value') ||\n        currentNode.nodeName.includes('-') // Support complex data passing for custom elements\n      ) {\n        // @ts-expect-error We have to index the element for custom elements or setting checked/selected/value\n        currentNode[key] = value\n      }\n      if (value !== undefined) {\n        currentNode.setAttribute(key, '' + value)\n      } else {\n        currentNode.removeAttribute(key)\n      }\n      oldAttributes[key] = value\n    }\n  }\n  for (const key of currentNode.getAttributeNames().filter(e => !Object.keys(attributes).includes(e))) {\n    currentNode.removeAttribute(key)\n  }\n  if (!children.length && currentNode.childNodes.length) {\n    if (attributes['data-skruv-wait-for-not-empty']) {\n      return\n    }\n    currentNode.replaceChildren()\n    return\n  }\n  if (currentNode.childNodes.length > children.length) {\n    for (let i = (currentNode.childNodes.length - 1); i >= children.length; i--) {\n      currentNode.removeChild(currentNode.childNodes[i])\n    }\n  }\n  for (let i = 0; i < children.length; i++) {\n    let forceFull = false\n    /** @type {Element} */\n    let keyedNode\n    if (children[i]?.c) {\n      // @ts-expect-error\n      keyedNode = keyed.get(children[i].c[0]?.['data-skruv-key'])\n      if (keyedNode) {\n        // @ts-expect-error\n        if (keyedNode !== currentNode.childNodes[i]) {\n          // @ts-expect-error\n          if (keyedNode === currentNode.childNodes[i + 1]) {\n            currentNode.removeChild(currentNode.childNodes[i])\n          // @ts-expect-error\n          } else if (currentNode.childNodes[i] && keyed.get(children[i + 1]?.c?.[0]?.['data-skruv-key']) === currentNode.childNodes[i]) {\n            // @ts-expect-error\n            currentNode.insertBefore(keyedNode, currentNode.childNodes[i])\n          } else if (currentNode.childNodes[i]) {\n            // @ts-expect-error\n            currentNode.replaceChild(keyedNode, currentNode.childNodes[i])\n          } else {\n            // @ts-expect-error\n            currentNode.appendChild(keyedNode)\n          }\n        }\n        // @ts-expect-error\n        forceFull = children[i].c[0]['data-skruv-key'] !== oldKeys.get(currentNode.childNodes[i])\n        if (!forceFull) {\n          const lastKeyCopy = keyed.get(currentNode.childNodes[i])\n          if (lastKeyCopy) {\n            let noChange = true\n            // @ts-expect-error\n            for (const k in children[i].c[0]['data-skruv-key']) {\n              // @ts-expect-error\n              if (children[i].c[0]['data-skruv-key'][k] !== lastKeyCopy[k]) {\n                noChange = false\n              }\n            }\n            if (noChange) { continue }\n          }\n        }\n      } else {\n        forceFull = keyed.has(currentNode.childNodes[i])\n      }\n    }\n    // @ts-expect-error: This will be fine since if the node is of the wrong type a new one is created\n    render(children[i], currentNode.childNodes[i] || false, currentNode, ns, forceFull)\n  }\n  if (attributes['data-skruv-key']) {\n    keyed.set(attributes['data-skruv-key'], currentNode)\n    oldKeys.set(currentNode, attributes['data-skruv-key'])\n    keyed.set(currentNode, { ...attributes['data-skruv-key'] })\n  }\n}\n\n/** @type {import(\"./utilityTypes\").ElementMap} */ // @ts-expect-error\nexport const elementFactory = new Proxy({}, { get: (_, t) => (...c) => ({ isSkruvDom: true, t, c }) })\n", "/* global CSSMediaRule CSSStyleRule CSSOM */\n\n/** @type {function} */\nlet resolveStyles = () => {}\nlet promiseStyles = new Promise(resolve => { resolveStyles = resolve })\nconst styleMap = new Map()\n\n// // Example of using webcrypto for hashing. Only works if loaded over https, so not used. Also requires async\n// const encoder = new TextEncoder()\n// /**\n//  * @param {string} str\n//  * @returns {Promise<string>}\n//  */\n// const hash = async str => [...new Uint8Array(await crypto.subtle.digest('SHA-1', encoder.encode(str)))].map(x => x.toString(16).padStart(2, '0')).join('')\n\n/**\n * @param {string} str\n * @returns {string}\n */\nconst hash = str => {\n  let hash = 0\n  if (str.length === 0) { return hash.toString() }\n  for (let i = 0; i < str.length; i++) {\n    hash = ((hash << 5) - hash) + str.charCodeAt(i)\n    hash |= 0 // Convert to 32bit integer\n  }\n  return hash.toString()\n}\n\n/**\n * Scoped CSS helper\n * @param {TemplateStringsArray} strings\n * @param {(String | Number | Boolean | undefined)[]} keys\n * @returns {string}\n */\nexport const css = (strings, ...keys) => {\n  const stylesheet = strings.reduce(\n    /**\n     * @param {String[]} prev\n     * @param {String} curr\n     * @returns {String[]}\n     */\n    (prev, curr, i) => {\n      prev.push(curr)\n      prev.push(keys?.[i]?.toString() || '')\n      return prev\n    },\n    []\n  ).join('')\n\n  // The implementation of this is lifted from https://github.com/samthor/scoped with some modifications\n  const attrRe = /^\\[.*?(?:([\"'])(?:.|\\\\\\1)*\\1.*)*\\]/\n  const walkSelectorRe = /([([,]|:scope\\b)/ // \"interesting\" setups\n  const scopeRe = /^:scope\\b/\n\n  /**\n   * Consumes a single selector from candidate selector text, which may contain many.\n   *\n   * @param {string} raw selector text\n   * @param {string} prefix prefix to apply\n   * @return {?{selector: string, rest: string}}\n   */\n  function consumeSelector (raw, prefix) {\n    let i = raw.search(walkSelectorRe)\n    if (i === -1) {\n      // found literally nothing interesting, success\n      return {\n        selector: `${prefix} ${raw}`,\n        rest: ''\n      }\n    } else if (raw[i] === ',') {\n      // found comma without anything interesting, yield rest\n      return {\n        selector: `${prefix} ${raw.substring(0, i)}`,\n        rest: raw.substring(i + 1)\n      }\n    }\n\n    let leftmost = true // whether we're past a descendant or similar selector\n    let scope = false // whether :scope has been found + replaced\n    i = raw.search(/\\S/) // place i after initial whitespace only\n\n    let depth = 0\n    // eslint-disable-next-line no-labels\n    outer:\n    for (; i < raw.length; ++i) {\n      const char = raw[i]\n      switch (char) {\n        case '[': {\n          const match = attrRe.exec(raw.substring(i))\n          i += (match ? match[0].length : 1) - 1 // we add 1 every loop\n          continue\n        }\n        case '(':\n          ++depth\n          continue\n        case ':':\n          if (!leftmost) {\n            continue // doesn't matter if :scope is here, it'll always be ignored\n          } else if (!scopeRe.test(raw.substring(i))) {\n            continue // not ':scope', ignore\n          } else if (depth) {\n            return null\n          }\n          // Replace ':scope' with our prefix. This can happen many times; ':scope:scope' is valid.\n          // It will never apply to a descendant selector (e.g., \".foo :scope\") as this is ignored\n          // by browsers anyway (invalid).\n          raw = raw.substring(0, i) + prefix + raw.substring(i + 6)\n          i += prefix.length\n          scope = true\n          --i // we'd skip over next character otherwise\n          continue // run loop again\n        case ')':\n          if (depth) {\n            --depth\n          }\n          continue\n      }\n      if (depth) {\n        continue\n      }\n\n      switch (char) {\n        case ',':\n          // eslint-disable-next-line no-labels\n          break outer\n        case ' ':\n        case '>':\n        case '~':\n        case '+':\n          if (!leftmost) {\n            continue\n          }\n          leftmost = false\n      }\n    }\n\n    const selector = (scope ? '' : `${prefix} `) + raw.substring(0, i)\n    return { selector, rest: raw.substring(i + 1) }\n  }\n\n  /**\n   * @param {string} selectorText\n   * @param {string} prefix to apply\n   */\n  function updateSelectorText (selectorText, prefix) {\n    const found = []\n\n    while (selectorText) {\n      const consumed = consumeSelector(selectorText, prefix)\n      if (consumed === null) {\n        return ':not(*)'\n      }\n      found.push(consumed.selector)\n      selectorText = consumed.rest\n    }\n\n    return found.join(', ')\n  }\n\n  /**\n   * Upgrades a specific CSSRule.\n   *\n   * @param {!CSSRule} rule\n   * @param {string} prefix to apply\n   */\n  function upgradeRule (rule, prefix) {\n    if (rule instanceof CSSMediaRule) {\n      // upgrade children\n      const l = rule.cssRules.length\n      for (let j = 0; j < l; ++j) {\n        upgradeRule(rule.cssRules[j], prefix)\n      }\n      return\n    }\n\n    if (!(rule instanceof CSSStyleRule)) {\n      return // unknown rule type, ignore\n    }\n\n    rule.selectorText = updateSelectorText(rule.selectorText, prefix)\n  }\n  const scope = hash(stylesheet)\n  const retval = `skruv-css-scope-${scope}`\n  const prefix = `.${retval}`\n\n  if (styleMap.has(scope)) {\n    return retval\n  }\n  let sheet\n  if (!globalThis?.CSSOM && !globalThis.document?.implementation) {\n    throw new Error('No css parser available. Either add CSSOM to globalThis or run in browser.')\n  }\n  if (globalThis?.CSSOM) {\n    sheet = CSSOM.parse(stylesheet)\n  } else {\n    // In FF/Chrome we could create the sheet with new CSSStyleSheet(), but that does not work in safari (supported from 16.4 (Released 2023-03-27))\n    // TODO: don't recreate each run\n    const styleDoc = globalThis.document.implementation.createHTMLDocument('')\n    const styleElem = styleDoc.createElementNS('http://www.w3.org/1999/xhtml', 'style')\n    styleElem.innerText = stylesheet\n    styleDoc.body.append(styleElem)\n    // @ts-expect-error: TODO: Fix this with better typings and by using new CSSStyleSheet directly\n    sheet = styleElem.sheet\n    styleDoc.body.removeChild(styleElem)\n  }\n  Array.from(sheet?.cssRules || []).forEach(e =>\n    upgradeRule(e, prefix)\n  )\n  const upgradedStyles = Array.from(sheet?.cssRules || []).map(e =>\n    e.cssText || ''\n  )\n    .join('')\n  styleMap.set(scope, upgradedStyles)\n  resolveStyles()\n  return retval\n}\n\n/**\n * @returns {AsyncGenerator<string>}\n */\nexport async function * cssTextGenerator () {\n  yield Array.from(styleMap.values()).join('')\n  while (true) {\n    await promiseStyles\n    yield Array.from(styleMap.values()).join('')\n    promiseStyles = new Promise(resolve => { resolveStyles = resolve })\n  }\n}\n", "/**\n * @template T\n * @param {T} stateObj\n * @returns {import(\"../utilityTypes\").State<T>}\n */\nexport const createState = stateObj => {\n  const Handler = class Handler {\n    constructor () {\n      this._scheduled = false\n      this._skruv_promise = new Promise(resolve => { this._skruv_resolve = resolve })\n    }\n\n    _resolve () {\n      if (this._skruv_parent && this._skruv_parent._resolve) {\n        this._skruv_parent._resolve()\n      }\n      if (this._scheduled) { return }\n      this._scheduled = true\n      setTimeout(() => {\n        this._skruv_resolve('')\n        this._skruv_promise = new Promise(resolve => { this._skruv_resolve = resolve })\n        this._scheduled = false\n      }, 0)\n    }\n\n    /**\n     * @param {Record<string,any>|Array<any>} target\n     * @param {string|number} key\n     * @param {any} value\n     * @returns {boolean}\n     */\n    set (target, key, value) {\n      if (key === '_skruv_parent') {\n        this._skruv_parent = value\n        return true\n      }\n      // @ts-expect-error\n      if (target[key] !== value) {\n        // @ts-expect-error\n        target[key] = this.recurse(key, value, target)\n      }\n      return true\n    }\n\n    /**\n     * @param {Record<string,any>|Array<any>} target\n     * @param {string|number|Symbol} key\n     * @param {Proxy} proxy\n     * @returns {any}\n     */\n    get (target, key, proxy) {\n      if (key === 'getGenerator') {\n        // @ts-expect-error\n        return key => ({\n          key: [key, target],\n          [Symbol.asyncIterator]: () => {\n            // If this is the first loop for this sub we should return directly for first value\n            let booted = false\n            return {\n              next: async () => {\n                if (booted) {\n                  await this._skruv_promise\n                } else {\n                  booted = true\n                }\n                // @ts-expect-error\n                return { done: false, value: proxy[key] }\n              }\n            }\n          }\n        })\n      }\n      if (key === 'toJSON') {\n        if (target.constructor === Object) {\n          return Object.getOwnPropertyNames(target).reduce((acc, curr) => {\n            // @ts-expect-error\n            acc[curr] = target[curr]?.toJSON || target[curr]\n            return acc\n          }, {})\n        }\n        if (target.constructor === Array) {\n          return target.map(curr => curr?.toJSON || curr)\n        }\n        return target\n      }\n      if (key === Symbol.asyncIterator) {\n        return () => {\n          // If this is the first loop for this sub we should return directly for first value\n          let booted = false\n          return {\n            next: async () => {\n              if (booted) {\n                await this._skruv_promise\n              } else {\n                booted = true\n              }\n              return { done: false, value: proxy }\n            }\n          }\n        }\n      }\n      // @ts-expect-error\n      return target[key]\n    }\n\n    /**\n     * @param {Record<string,any>|Array<any>} target\n     * @param {string|number} key\n     * @returns {boolean}\n     */\n    deleteProperty (target, key) {\n      // @ts-expect-error\n      const res = delete target[key]\n      this._resolve()\n      return res\n    }\n\n    /**\n     * @param {string} path\n     * @param {any} value\n     * @param {Record<string,any>|Array<any>} target\n     * @returns {any}\n     */\n    recurse (path, value, target) {\n      // check for falsy values\n      if (value && value.constructor) {\n        // @ts-expect-error\n        if (value.constructor === Object && target?.[path]?.constructor === Object) {\n          for (const key of Object.getOwnPropertyNames(value)) {\n            // @ts-expect-error\n            if (target[path][key] !== value[key]) {\n              // @ts-expect-error\n              target[path][key] = value[key]\n            }\n          }\n          // @ts-expect-error\n          for (const key of Object.getOwnPropertyNames(target[path])\n            .filter(item => !Object.getOwnPropertyNames(value).includes(item))\n          ) {\n            // @ts-expect-error\n            delete target[path][key]\n            this._resolve()\n          }\n          // @ts-expect-error\n          return target[path]\n        } else if (value.constructor === Object) {\n          const subProxy = new Handler()\n          // check object properties for other objects or arrays\n          value = Object.keys(value).reduce((acc, key) => {\n            // @ts-expect-error\n            acc[key] = this.recurse(`${path}.${key}`, value[key])\n            // @ts-expect-error\n            if (typeof acc[key] === 'object' && acc[key] !== null) { acc[key]._skruv_parent = subProxy }\n            return acc\n          }, {})\n          // @ts-expect-error\n          value = new Proxy(value, subProxy)\n          value._skruv_parent = this\n          this._resolve()\n        } else if (value.constructor === Array) {\n          const subProxy = new Handler()\n          // check arrays for objects or arrays\n          value = value.map((child, key) => {\n            // @ts-expect-error\n            const newValue = this.recurse(`${path}[${key}]`, child)\n            if (typeof newValue === 'object' && newValue !== null) { newValue._skruv_parent = subProxy }\n            return newValue\n          })\n          // @ts-expect-error\n          value = new Proxy(value, subProxy)\n          value._skruv_parent = this\n          this._resolve()\n        } else {\n          this._resolve()\n        }\n      } else {\n        this._resolve()\n      }\n      return value\n    }\n  }\n\n  // create root proxy\n  // @ts-expect-error\n  const rootProxy = new Proxy(stateObj.constructor === Array ? [] : {}, new Handler('root'))\n  Object.assign(rootProxy, stateObj)\n  // @ts-expect-error\n  return rootProxy\n}\n", "let hydrating = true\nconst generatorResults = new WeakMap()\nlet hydrationResolve = () => { }\nconst hydrationPromise = new Promise(resolve => {\n  hydrationResolve = () => {\n    hydrating = false\n    setTimeout(() => resolve(''), 0)\n  }\n})\nconst waitingGens = new Set()\n\n/**\n * @template T\n * @param {AsyncGenerator<T>|AsyncIterator<T>|Promise<T>|(()=>T|(()=>Promise<T>))} value\n * @param {string|number} key\n * @param {Array<any>|Object} parent\n * @param {{r:() => boolean}} cbparent\n * @param {Object|string|number|boolean|{c:[{'data-skruv-finished':boolean}]}} result\n * @returns {boolean}\n */\nconst process = (value, key, parent, cbparent, result) => {\n  if (hydrating && !(typeof result === 'object' && 'c' in result && result?.c?.[0]?.['data-skruv-finished'] === false)) {\n    waitingGens.delete(value)\n    if (!waitingGens.size) {\n      hydrationResolve()\n    }\n  }\n  generatorResults.set(value, result)\n  // @ts-expect-error: This complains, but we should always get either array and number key or object and string key\n  parent[key] = result\n  if (cbparent.r) {\n    return cbparent.r()\n  } else {\n    return true\n  }\n}\n\n/**\n * @template T\n * @param {AsyncGenerator<T>|AsyncIterator<T>|Promise<T>|(()=>T)|string|number|boolean|T} value\n * @param {(string|number)?} key\n * @param {(Array<any>|Object)?} parent\n * @param {{r:() => boolean}?} cbparent\n * @returns {T}\n */\nconst syncify = (value, key = null, parent = null, cbparent = null, root = true) => {\n  if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean' || value === null) {\n    // @ts-expect-error\n    return value\n  }\n  // @ts-expect-error\n  if (generatorResults.has(value)) {\n    // @ts-expect-error\n    return generatorResults.get(value)\n  }\n  if (key && parent && cbparent) {\n    if (\n      (typeof value === 'object' && Symbol.asyncIterator in value) ||\n      (typeof value === 'function' && value.constructor.name === 'AsyncGeneratorFunction')\n    ) {\n      if (hydrating) { waitingGens.add(value) }\n      generatorResults.set(value, null);\n      (async () => {\n        // @ts-expect-error\n        for await (const result of (typeof value === 'function' ? value() : value)) {\n          if (!process(\n            // @ts-expect-error\n            value,\n            key,\n            parent,\n            cbparent,\n            syncify(result, key, parent, cbparent, false)\n          )) {\n            break\n          }\n        }\n      })()\n      // @ts-expect-error\n      return null\n    }\n    if (\n      (typeof value === 'object' && 'then' in value && typeof value.then === 'function') ||\n      (typeof value === 'function' && value.constructor.name === 'AsyncFunction')\n    ) {\n      if (hydrating) { waitingGens.add(value) }\n      generatorResults.set(value, null);\n      (async () => {\n        process(\n          // @ts-expect-error\n          value,\n          key,\n          parent,\n          cbparent,\n          syncify(\n            // @ts-expect-error\n            await (typeof value === 'function' ? value() : value),\n            key,\n            parent,\n            cbparent,\n            false\n          )\n        )\n      })()\n      // @ts-expect-error\n      return null\n    }\n    if (typeof value === 'function') {\n      // check for eventlisteners or internal functions\n      // TODO: Have some sort of way to pass functions to web components, check for - in parent tag name\n      if (\n        // @ts-expect-error: TODO: Fix better types for Vnodes (and how to typeguard for them)\n        (key[0] === 'o' && key[1] === 'n') || (key === 'r' && parent?.isSkruvDom === true) ||\n        key === 'data-skruv-after-create'\n      ) {\n        // @ts-expect-error\n        return value\n      }\n      // @ts-expect-error\n      const newValue = syncify(value(), key, parent, cbparent, false)\n      generatorResults.set(value, newValue)\n      return newValue\n    }\n  }\n  if (typeof value === 'object') {\n    /** @type {{r?:() => boolean}|Array<any>} */\n    let newVal = {}\n    let cb = newVal\n    // @ts-expect-error: TODO: Fix better types for Vnodes\n    if (value.isSkruvDom === true) {\n      newVal.r = () => {\n        if ((hydrating && !waitingGens.size) || !hydrating) {\n          hydrationResolve()\n        }\n        return true\n      }\n    } else if (cbparent?.r) {\n      cb = cbparent\n    }\n    if (Array.isArray(value)) {\n      newVal = []\n    }\n    // Object with dummy default rerender callback\n    for (const key in value) {\n      // @ts-expect-error: TODO: Have a stricter check than typeof value === 'object' above\n      const partialNewVal = syncify(value[key], key, newVal, cb, false)\n      // @ts-expect-error\n      if (partialNewVal !== null || value[key] === null) {\n        // @ts-expect-error: This complains, but we will always get either array and number key or object and string key\n        newVal[key] = partialNewVal\n      }\n    }\n    // If we are at the root and did a pass with no async work the promise should resolve\n    if ((root && hydrating && !waitingGens.size) || !hydrating) {\n      hydrationResolve()\n    }\n    // @ts-expect-error\n    return newVal\n  }\n  // @ts-expect-error\n  return value\n}\n\nexport { hydrationPromise, syncify }\n", "import * as util from './utilityTypes'\n\nexport namespace JSX {\n  export interface IntrinsicElements {\n\n    'html': util.SkruvHtmlHTMLAttributes\n\n    'base': util.SkruvBaseHTMLAttributes\n\n    'head': util.SkruvHeadHTMLAttributes\n\n    'title': util.SkruvTitleHTMLAttributes\n\n    'script': util.SkruvScriptHTMLAttributes\n\n    'style': util.SkruvStyleHTMLAttributes\n\n    'link': util.SkruvLinkHTMLAttributes\n\n    'meta': util.SkruvMetaHTMLAttributes\n\n    'body': util.SkruvBodyHTMLAttributes\n\n    'address': util.SkruvAddressHTMLAttributes\n\n    'article': util.SkruvArticleHTMLAttributes\n\n    'aside': util.SkruvAsideHTMLAttributes\n\n    'footer': util.SkruvFooterHTMLAttributes\n\n    'h1': util.SkruvH1HTMLAttributes\n\n    'h2': util.SkruvH2HTMLAttributes\n\n    'h3': util.SkruvH3HTMLAttributes\n\n    'h4': util.SkruvH4HTMLAttributes\n\n    'h5': util.SkruvH5HTMLAttributes\n\n    'h6': util.SkruvH6HTMLAttributes\n\n    'header': util.SkruvHeaderHTMLAttributes\n\n    'hgroup': util.SkruvHgroupHTMLAttributes\n\n    'main': util.SkruvMainHTMLAttributes\n\n    'nav': util.SkruvNavHTMLAttributes\n\n    'section': util.SkruvSectionHTMLAttributes\n\n    'search': util.SkruvSearchHTMLAttributes\n\n    'blockquote': util.SkruvBlockquoteHTMLAttributes\n\n    'cite': util.SkruvCiteHTMLAttributes\n\n    'dd': util.SkruvDdHTMLAttributes\n\n    'dt': util.SkruvDtHTMLAttributes\n\n    'dl': util.SkruvDlHTMLAttributes\n\n    'div': util.SkruvDivHTMLAttributes\n\n    'figcaption': util.SkruvFigcaptionHTMLAttributes\n\n    'figure': util.SkruvFigureHTMLAttributes\n\n    'hr': util.SkruvHrHTMLAttributes\n\n    'li': util.SkruvLiHTMLAttributes\n\n    'ol': util.SkruvOlHTMLAttributes\n\n    'ul': util.SkruvUlHTMLAttributes\n\n    'menu': util.SkruvMenuHTMLAttributes\n\n    'p': util.SkruvPHTMLAttributes\n\n    'pre': util.SkruvPreHTMLAttributes\n\n    'a': util.SkruvAHTMLAttributes\n\n    'abbr': util.SkruvAbbrHTMLAttributes\n\n    'b': util.SkruvBHTMLAttributes\n\n    'bdi': util.SkruvBdiHTMLAttributes\n\n    'bdo': util.SkruvBdoHTMLAttributes\n\n    'br': util.SkruvBrHTMLAttributes\n\n    'code': util.SkruvCodeHTMLAttributes\n\n    'data': util.SkruvDataHTMLAttributes\n\n    'dfn': util.SkruvDfnHTMLAttributes\n\n    'em': util.SkruvEmHTMLAttributes\n\n    'i': util.SkruvIHTMLAttributes\n\n    'kbd': util.SkruvKbdHTMLAttributes\n\n    'mark': util.SkruvMarkHTMLAttributes\n\n    'q': util.SkruvQHTMLAttributes\n\n    'rp': util.SkruvRpHTMLAttributes\n\n    'ruby': util.SkruvRubyHTMLAttributes\n\n    'rt': util.SkruvRtHTMLAttributes\n\n    's': util.SkruvSHTMLAttributes\n\n    'samp': util.SkruvSampHTMLAttributes\n\n    'small': util.SkruvSmallHTMLAttributes\n\n    'span': util.SkruvSpanHTMLAttributes\n\n    'strong': util.SkruvStrongHTMLAttributes\n\n    'sub': util.SkruvSubHTMLAttributes\n\n    'sup': util.SkruvSupHTMLAttributes\n\n    'time': util.SkruvTimeHTMLAttributes\n\n    'u': util.SkruvUHTMLAttributes\n\n    'var': util.SkruvVarHTMLAttributes\n\n    'wbr': util.SkruvWbrHTMLAttributes\n\n    'area': util.SkruvAreaHTMLAttributes\n\n    'audio': util.SkruvAudioHTMLAttributes\n\n    'img': util.SkruvImgHTMLAttributes\n\n    'map': util.SkruvMapHTMLAttributes\n\n    'track': util.SkruvTrackHTMLAttributes\n\n    'video': util.SkruvVideoHTMLAttributes\n\n    'embed': util.SkruvEmbedHTMLAttributes\n\n    'iframe': util.SkruvIframeHTMLAttributes\n\n    'object': util.SkruvObjectHTMLAttributes\n\n    'picture': util.SkruvPictureHTMLAttributes\n\n    'source': util.SkruvSourceHTMLAttributes\n\n    'portal': util.SkruvPortalHTMLAttributes\n\n    'canvas': util.SkruvCanvasHTMLAttributes\n\n    'noscript': util.SkruvNoscriptHTMLAttributes\n\n    'del': util.SkruvDelHTMLAttributes\n\n    'ins': util.SkruvInsHTMLAttributes\n\n    'caption': util.SkruvCaptionHTMLAttributes\n\n    'col': util.SkruvColHTMLAttributes\n\n    'colgroup': util.SkruvColgroupHTMLAttributes\n\n    'table': util.SkruvTableHTMLAttributes\n\n    'tbody': util.SkruvTbodyHTMLAttributes\n\n    'tr': util.SkruvTrHTMLAttributes\n\n    'td': util.SkruvTdHTMLAttributes\n\n    'tfoot': util.SkruvTfootHTMLAttributes\n\n    'th': util.SkruvThHTMLAttributes\n\n    'thead': util.SkruvTheadHTMLAttributes\n\n    'button': util.SkruvButtonHTMLAttributes\n\n    'datalist': util.SkruvDatalistHTMLAttributes\n\n    'option': util.SkruvOptionHTMLAttributes\n\n    'fieldset': util.SkruvFieldsetHTMLAttributes\n\n    'label': util.SkruvLabelHTMLAttributes\n\n    'form': util.SkruvFormHTMLAttributes\n\n    'input': util.SkruvInputHTMLAttributes\n\n    'legend': util.SkruvLegendHTMLAttributes\n\n    'meter': util.SkruvMeterHTMLAttributes\n\n    'optgroup': util.SkruvOptgroupHTMLAttributes\n\n    'select': util.SkruvSelectHTMLAttributes\n\n    'output': util.SkruvOutputHTMLAttributes\n\n    'progress': util.SkruvProgressHTMLAttributes\n\n    'textarea': util.SkruvTextareaHTMLAttributes\n\n    'details': util.SkruvDetailsHTMLAttributes\n\n    'summary': util.SkruvSummaryHTMLAttributes\n\n    'dialog': util.SkruvDialogHTMLAttributes\n\n    'slot': util.SkruvSlotHTMLAttributes\n\n    'template': util.SkruvTemplateHTMLAttributes\n\n    'svgA': util.SkruvASVGAttributes\n\n    'animate': util.SkruvAnimateSVGAttributes\n\n    'animateMotion': util.SkruvAnimatemotionSVGAttributes\n\n    'animateTransform': util.SkruvAnimatetransformSVGAttributes\n\n    'circle': util.SkruvCircleSVGAttributes\n\n    'clipPath': util.SkruvClippathSVGAttributes\n\n    'defs': util.SkruvDefsSVGAttributes\n\n    'desc': util.SkruvDescSVGAttributes\n\n    'ellipse': util.SkruvEllipseSVGAttributes\n\n    'feBlend': util.SkruvFeblendSVGAttributes\n\n    'feColorMatrix': util.SkruvFecolormatrixSVGAttributes\n\n    'feComponentTransfer': util.SkruvFecomponenttransferSVGAttributes\n\n    'feComposite': util.SkruvFecompositeSVGAttributes\n\n    'feConvolveMatrix': util.SkruvFeconvolvematrixSVGAttributes\n\n    'feDiffuseLighting': util.SkruvFediffuselightingSVGAttributes\n\n    'feDisplacementMap': util.SkruvFedisplacementmapSVGAttributes\n\n    'feDistantLight': util.SkruvFedistantlightSVGAttributes\n\n    'feDropShadow': util.SkruvFedropshadowSVGAttributes\n\n    'feFlood': util.SkruvFefloodSVGAttributes\n\n    'feFuncA': util.SkruvFefuncaSVGAttributes\n\n    'feFuncB': util.SkruvFefuncbSVGAttributes\n\n    'feFuncG': util.SkruvFefuncgSVGAttributes\n\n    'feFuncR': util.SkruvFefuncrSVGAttributes\n\n    'feGaussianBlur': util.SkruvFegaussianblurSVGAttributes\n\n    'feImage': util.SkruvFeimageSVGAttributes\n\n    'feMerge': util.SkruvFemergeSVGAttributes\n\n    'feMergeNode': util.SkruvFemergenodeSVGAttributes\n\n    'feMorphology': util.SkruvFemorphologySVGAttributes\n\n    'feOffset': util.SkruvFeoffsetSVGAttributes\n\n    'fePointLight': util.SkruvFepointlightSVGAttributes\n\n    'feSpecularLighting': util.SkruvFespecularlightingSVGAttributes\n\n    'feSpotLight': util.SkruvFespotlightSVGAttributes\n\n    'feTile': util.SkruvFetileSVGAttributes\n\n    'feTurbulence': util.SkruvFeturbulenceSVGAttributes\n\n    'filter': util.SkruvFilterSVGAttributes\n\n    'foreignObject': util.SkruvForeignobjectSVGAttributes\n\n    'g': util.SkruvGSVGAttributes\n\n    'image': util.SkruvImageSVGAttributes\n\n    'line': util.SkruvLineSVGAttributes\n\n    'linearGradient': util.SkruvLineargradientSVGAttributes\n\n    'marker': util.SkruvMarkerSVGAttributes\n\n    'mask': util.SkruvMaskSVGAttributes\n\n    'metadata': util.SkruvMetadataSVGAttributes\n\n    'mpath': util.SkruvMpathSVGAttributes\n\n    'path': util.SkruvPathSVGAttributes\n\n    'pattern': util.SkruvPatternSVGAttributes\n\n    'polygon': util.SkruvPolygonSVGAttributes\n\n    'polyline': util.SkruvPolylineSVGAttributes\n\n    'radialGradient': util.SkruvRadialgradientSVGAttributes\n\n    'rect': util.SkruvRectSVGAttributes\n\n    'svgScript': util.SkruvScriptSVGAttributes\n\n    'set': util.SkruvSetSVGAttributes\n\n    'stop': util.SkruvStopSVGAttributes\n\n    'svgStyle': util.SkruvStyleSVGAttributes\n\n    'svg': util.SkruvSvgSVGAttributes\n\n    'switch': util.SkruvSwitchSVGAttributes\n\n    'symbol': util.SkruvSymbolSVGAttributes\n\n    'text': util.SkruvTextSVGAttributes\n\n    'textPath': util.SkruvTextpathSVGAttributes\n\n    'svgTitle': util.SkruvTitleSVGAttributes\n\n    'tspan': util.SkruvTspanSVGAttributes\n\n    'use': util.SkruvUseSVGAttributes\n\n    'view': util.SkruvViewSVGAttributes\n\n    'math': util.SkruvMathMathMLAttributes\n\n    'semantics': util.SkruvSemanticsMathMLAttributes\n\n    'menclose': util.SkruvMencloseMathMLAttributes\n\n    'merror': util.SkruvMerrorMathMLAttributes\n\n    'mfrac': util.SkruvMfracMathMLAttributes\n\n    'mi': util.SkruvMiMathMLAttributes\n\n    'mmultiscripts': util.SkruvMmultiscriptsMathMLAttributes\n\n    'mn': util.SkruvMnMathMLAttributes\n\n    'mo': util.SkruvMoMathMLAttributes\n\n    'mover': util.SkruvMoverMathMLAttributes\n\n    'mpadded': util.SkruvMpaddedMathMLAttributes\n\n    'mphantom': util.SkruvMphantomMathMLAttributes\n\n    'mroot': util.SkruvMrootMathMLAttributes\n\n    'mrow': util.SkruvMrowMathMLAttributes\n\n    'ms': util.SkruvMsMathMLAttributes\n\n    'mspace': util.SkruvMspaceMathMLAttributes\n\n    'msqrt': util.SkruvMsqrtMathMLAttributes\n\n    'mstyle': util.SkruvMstyleMathMLAttributes\n\n    'msub': util.SkruvMsubMathMLAttributes\n\n    'msup': util.SkruvMsupMathMLAttributes\n\n    'msubsup': util.SkruvMsubsupMathMLAttributes\n\n    'mtable': util.SkruvMtableMathMLAttributes\n\n    'mtd': util.SkruvMtdMathMLAttributes\n\n    'mtext': util.SkruvMtextMathMLAttributes\n\n    'mtr': util.SkruvMtrMathMLAttributes\n\n    'munder': util.SkruvMunderMathMLAttributes\n\n    'munderover': util.SkruvMunderoverMathMLAttributes\n\n    'feed': util.SkruvFeedAtomAttributes\n\n    'entry': util.SkruvEntryAtomAttributes\n\n    'id': util.SkruvIdAtomAttributes\n\n    'atomTitle': util.SkruvTitleAtomAttributes\n\n    'updated': util.SkruvUpdatedAtomAttributes\n\n    'author': util.SkruvAuthorAtomAttributes\n\n    'name': util.SkruvNameAtomAttributes\n\n    'uri': util.SkruvUriAtomAttributes\n\n    'email': util.SkruvEmailAtomAttributes\n\n    'atomLink': util.SkruvLinkAtomAttributes\n\n    'category': util.SkruvCategoryAtomAttributes\n\n    'contributor': util.SkruvContributorAtomAttributes\n\n    'generator': util.SkruvGeneratorAtomAttributes\n\n    'icon': util.SkruvIconAtomAttributes\n\n    'logo': util.SkruvLogoAtomAttributes\n\n    'rights': util.SkruvRightsAtomAttributes\n\n    'subtitle': util.SkruvSubtitleAtomAttributes\n\n    'content': util.SkruvContentAtomAttributes\n\n    'atomSummary': util.SkruvSummaryAtomAttributes\n\n    'published': util.SkruvPublishedAtomAttributes\n\n    'atomSource': util.SkruvSourceAtomAttributes\n\n    'urlset': util.SkruvUrlsetSitemapAttributes\n\n    'url': util.SkruvUrlSitemapAttributes\n\n    'loc': util.SkruvLocSitemapAttributes\n\n    'lastmod': util.SkruvLastmodSitemapAttributes\n\n    'changefreq': util.SkruvChangefreqSitemapAttributes\n\n    'priority': util.SkruvPrioritySitemapAttributes\n\n    'sitemapindex': util.SkruvSitemapindexSitemapAttributes\n\n    'sitemap': util.SkruvSitemapSitemapAttributes\n    [elemName: string]: any;\n  }\n}\n\n/** @type {Record<string,string>} */\nconst reactMappings = {\n  accentHeight: 'accent-height',\n  accentheight: 'accent-height',\n  acceptCharset: 'accept-charset',\n  acceptcharset: 'accept-charset',\n  accessKey: 'accesskey',\n  alignmentBaseline: 'alignment-baseline',\n  alignmentbaseline: 'alignment-baseline',\n  allowFullScreen: 'allowfullscreen',\n  allowReorder: 'allowreorder',\n  arabicForm: 'arabic-form',\n  arabicform: 'arabic-form',\n  attributeName: 'attributename',\n  attributeType: 'attributetype',\n  autoCapitalize: 'autocapitalize',\n  autoComplete: 'autocomplete',\n  autoCorrect: 'autocorrect',\n  autoFocus: 'autofocus',\n  autoPlay: 'autoplay',\n  autoReverse: 'autoreverse',\n  autoSave: 'autosave',\n  baseFrequency: 'basefrequency',\n  baseProfile: 'baseprofile',\n  baselineShift: 'baseline-shift',\n  baselineshift: 'baseline-shift',\n  calcMode: 'calcmode',\n  capHeight: 'cap-height',\n  capheight: 'cap-height',\n  cellPadding: 'cellpadding',\n  cellSpacing: 'cellspacing',\n  charSet: 'charset',\n  classID: 'classid',\n  className: 'class',\n  classname: 'class',\n  clipPath: 'clip-path',\n  clipPathUnits: 'clippathunits',\n  clipRule: 'clip-rule',\n  clippath: 'clip-path',\n  cliprule: 'clip-rule',\n  colSpan: 'colspan',\n  colorInterpolation: 'color-interpolation',\n  colorInterpolationFilters: 'color-interpolation-filters',\n  colorProfile: 'color-profile',\n  colorRendering: 'color-rendering',\n  colorinterpolation: 'color-interpolation',\n  colorinterpolationfilters: 'color-interpolation-filters',\n  colorprofile: 'color-profile',\n  colorrendering: 'color-rendering',\n  contentEditable: 'contenteditable',\n  contentScriptType: 'contentscripttype',\n  contentStyleType: 'contentstyletype',\n  contextMenu: 'contextmenu',\n  controlsList: 'controlslist',\n  crossOrigin: 'crossorigin',\n  dangerouslySetInnerHTML: 'dangerouslysetinnerhtml',\n  dateTime: 'datetime',\n  defaultChecked: 'defaultchecked',\n  defaultValue: 'defaultvalue',\n  diffuseConstant: 'diffuseconstant',\n  disablePictureInPicture: 'disablepictureinpicture',\n  disableRemotePlayback: 'disableremoteplayback',\n  dominantBaseline: 'dominant-baseline',\n  dominantbaseline: 'dominant-baseline',\n  edgeMode: 'edgemode',\n  enableBackground: 'enable-background',\n  enablebackground: 'enable-background',\n  encType: 'enctype',\n  enterKeyHint: 'enterkeyhint',\n  externalResourcesRequired: 'externalresourcesrequired',\n  fetchPriority: 'fetchpriority',\n  fillOpacity: 'fill-opacity',\n  fillRule: 'fill-rule',\n  fillopacity: 'fill-opacity',\n  fillrule: 'fill-rule',\n  filterRes: 'filterres',\n  filterUnits: 'filterunits',\n  floodColor: 'flood-color',\n  floodOpacity: 'flood-opacity',\n  floodcolor: 'flood-color',\n  floodopacity: 'flood-opacity',\n  fontFamily: 'font-family',\n  fontSize: 'font-size',\n  fontSizeAdjust: 'font-size-adjust',\n  fontStretch: 'font-stretch',\n  fontStyle: 'font-style',\n  fontVariant: 'font-variant',\n  fontWeight: 'font-weight',\n  fontfamily: 'font-family',\n  fontsize: 'font-size',\n  fontsizeadjust: 'font-size-adjust',\n  fontstretch: 'font-stretch',\n  fontstyle: 'font-style',\n  fontvariant: 'font-variant',\n  fontweight: 'font-weight',\n  formAction: 'formaction',\n  formEncType: 'formenctype',\n  formMethod: 'formmethod',\n  formNoValidate: 'formnovalidate',\n  formTarget: 'formtarget',\n  frameBorder: 'frameborder',\n  glyphName: 'glyph-name',\n  glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n  glyphOrientationVertical: 'glyph-orientation-vertical',\n  glyphRef: 'glyphref',\n  glyphname: 'glyph-name',\n  glyphorientationhorizontal: 'glyph-orientation-horizontal',\n  glyphorientationvertical: 'glyph-orientation-vertical',\n  gradientTransform: 'gradienttransform',\n  gradientUnits: 'gradientunits',\n  horizAdvX: 'horiz-adv-x',\n  horizOriginX: 'horiz-origin-x',\n  horizadvx: 'horiz-adv-x',\n  horizoriginx: 'horiz-origin-x',\n  hrefLang: 'hreflang',\n  htmlFor: 'for',\n  htmlfor: 'for',\n  httpEquiv: 'http-equiv',\n  httpequiv: 'http-equiv',\n  imageRendering: 'image-rendering',\n  imageSizes: 'imagesizes',\n  imageSrcSet: 'imagesrcset',\n  imagerendering: 'image-rendering',\n  innerHTML: 'innerhtml',\n  inputMode: 'inputmode',\n  itemID: 'itemid',\n  itemProp: 'itemprop',\n  itemRef: 'itemref',\n  itemScope: 'itemscope',\n  itemType: 'itemtype',\n  kernelMatrix: 'kernelmatrix',\n  kernelUnitLength: 'kernelunitlength',\n  keyParams: 'keyparams',\n  keyPoints: 'keypoints',\n  keySplines: 'keysplines',\n  keyTimes: 'keytimes',\n  keyType: 'keytype',\n  lengthAdjust: 'lengthadjust',\n  letterSpacing: 'letter-spacing',\n  letterspacing: 'letter-spacing',\n  lightingColor: 'lighting-color',\n  lightingcolor: 'lighting-color',\n  limitingConeAngle: 'limitingconeangle',\n  marginHeight: 'marginheight',\n  marginWidth: 'marginwidth',\n  markerEnd: 'marker-end',\n  markerHeight: 'markerheight',\n  markerMid: 'marker-mid',\n  markerStart: 'marker-start',\n  markerUnits: 'markerunits',\n  markerWidth: 'markerwidth',\n  markerend: 'marker-end',\n  markermid: 'marker-mid',\n  markerstart: 'marker-start',\n  maskContentUnits: 'maskcontentunits',\n  maskUnits: 'maskunits',\n  maxLength: 'maxlength',\n  mediaGroup: 'mediagroup',\n  minLength: 'minlength',\n  noModule: 'nomodule',\n  noValidate: 'novalidate',\n  numOctaves: 'numoctaves',\n  overlinePosition: 'overline-position',\n  overlineThickness: 'overline-thickness',\n  overlineposition: 'overline-position',\n  overlinethickness: 'overline-thickness',\n  paintOrder: 'paint-order',\n  paintorder: 'paint-order',\n  panose1: 'panose-1',\n  pathLength: 'pathlength',\n  patternContentUnits: 'patterncontentunits',\n  patternTransform: 'patterntransform',\n  patternUnits: 'patternunits',\n  playsInline: 'playsinline',\n  pointerEvents: 'pointer-events',\n  pointerevents: 'pointer-events',\n  pointsAtX: 'pointsatx',\n  pointsAtY: 'pointsaty',\n  pointsAtZ: 'pointsatz',\n  preserveAlpha: 'preservealpha',\n  preserveAspectRatio: 'preserveaspectratio',\n  primitiveUnits: 'primitiveunits',\n  radioGroup: 'radiogroup',\n  readOnly: 'readonly',\n  refX: 'refx',\n  refY: 'refy',\n  referrerPolicy: 'referrerpolicy',\n  renderingIntent: 'rendering-intent',\n  renderingintent: 'rendering-intent',\n  repeatCount: 'repeatcount',\n  repeatDur: 'repeatdur',\n  requiredExtensions: 'requiredextensions',\n  requiredFeatures: 'requiredfeatures',\n  rowSpan: 'rowspan',\n  shapeRendering: 'shape-rendering',\n  shaperendering: 'shape-rendering',\n  specularConstant: 'specularconstant',\n  specularExponent: 'specularexponent',\n  spellCheck: 'spellcheck',\n  spreadMethod: 'spreadmethod',\n  srcDoc: 'srcdoc',\n  srcLang: 'srclang',\n  srcSet: 'srcset',\n  startOffset: 'startoffset',\n  stdDeviation: 'stddeviation',\n  stitchTiles: 'stitchtiles',\n  stopColor: 'stop-color',\n  stopOpacity: 'stop-opacity',\n  stopcolor: 'stop-color',\n  stopopacity: 'stop-opacity',\n  strikethroughPosition: 'strikethrough-position',\n  strikethroughThickness: 'strikethrough-thickness',\n  strikethroughposition: 'strikethrough-position',\n  strikethroughthickness: 'strikethrough-thickness',\n  strokeDasharray: 'stroke-dasharray',\n  strokeDashoffset: 'stroke-dashoffset',\n  strokeLinecap: 'stroke-linecap',\n  strokeLinejoin: 'stroke-linejoin',\n  strokeMiterlimit: 'stroke-miterlimit',\n  strokeOpacity: 'stroke-opacity',\n  strokeWidth: 'stroke-width',\n  strokedasharray: 'stroke-dasharray',\n  strokedashoffset: 'stroke-dashoffset',\n  strokelinecap: 'stroke-linecap',\n  strokelinejoin: 'stroke-linejoin',\n  strokemiterlimit: 'stroke-miterlimit',\n  strokeopacity: 'stroke-opacity',\n  strokewidth: 'stroke-width',\n  suppressContentEditableWarning: 'suppresscontenteditablewarning',\n  suppressHydrationWarning: 'suppresshydrationwarning',\n  surfaceScale: 'surfacescale',\n  systemLanguage: 'systemlanguage',\n  tabIndex: 'tabindex',\n  tableValues: 'tablevalues',\n  targetX: 'targetx',\n  targetY: 'targety',\n  textAnchor: 'text-anchor',\n  textDecoration: 'text-decoration',\n  textLength: 'textlength',\n  textRendering: 'text-rendering',\n  textanchor: 'text-anchor',\n  textdecoration: 'text-decoration',\n  textrendering: 'text-rendering',\n  transformOrigin: 'transform-origin',\n  transformorigin: 'transform-origin',\n  underlinePosition: 'underline-position',\n  underlineThickness: 'underline-thickness',\n  underlineposition: 'underline-position',\n  underlinethickness: 'underline-thickness',\n  unicodeBidi: 'unicode-bidi',\n  unicodeRange: 'unicode-range',\n  unicodebidi: 'unicode-bidi',\n  unicoderange: 'unicode-range',\n  unitsPerEm: 'units-per-em',\n  unitsperem: 'units-per-em',\n  useMap: 'usemap',\n  vAlphabetic: 'v-alphabetic',\n  vHanging: 'v-hanging',\n  vIdeographic: 'v-ideographic',\n  vMathematical: 'v-mathematical',\n  valphabetic: 'v-alphabetic',\n  vectorEffect: 'vector-effect',\n  vectoreffect: 'vector-effect',\n  vertAdvY: 'vert-adv-y',\n  vertOriginX: 'vert-origin-x',\n  vertOriginY: 'vert-origin-y',\n  vertadvy: 'vert-adv-y',\n  vertoriginx: 'vert-origin-x',\n  vertoriginy: 'vert-origin-y',\n  vhanging: 'v-hanging',\n  videographic: 'v-ideographic',\n  viewBox: 'viewbox',\n  viewTarget: 'viewtarget',\n  vmathematical: 'v-mathematical',\n  wordSpacing: 'word-spacing',\n  wordspacing: 'word-spacing',\n  writingMode: 'writing-mode',\n  writingmode: 'writing-mode',\n  xChannelSelector: 'xchannelselector',\n  xHeight: 'x-height',\n  xheight: 'x-height',\n  xlinkActuate: 'xlink:actuate',\n  xlinkArcrole: 'xlink:arcrole',\n  xlinkHref: 'xlink:href',\n  xlinkRole: 'xlink:role',\n  xlinkShow: 'xlink:show',\n  xlinkTitle: 'xlink:title',\n  xlinkType: 'xlink:type',\n  xlinkactuate: 'xlink:actuate',\n  xlinkarcrole: 'xlink:arcrole',\n  xlinkhref: 'xlink:href',\n  xlinkrole: 'xlink:role',\n  xlinkshow: 'xlink:show',\n  xlinktitle: 'xlink:title',\n  xlinktype: 'xlink:type',\n  xmlBase: 'xml:base',\n  xmlLang: 'xml:lang',\n  xmlSpace: 'xmlspace',\n  xmlbase: 'xml:base',\n  xmllang: 'xml:lang',\n  xmlnsXlink: 'xmlns:xlink',\n  xmlnsxlink: 'xmlns:xlink',\n  yChannelSelector: 'ychannelselector',\n  zoomAndPan: 'zoomandpan',\n  // This is stupid and I hate it.\n  onChange: 'oninput',\n  onchange: 'oninput'\n}\n\nexport const Fragment = '#fragment'\n\nexport const jsxs = (nodeName: string, attributes = {children: []}) => {\n  if (nodeName === Fragment && attributes.children) { return attributes.children }\n  if (nodeName === Fragment) { return [] }\n  const { children, ...attrs } = attributes\n  if (!nodeName.includes('-')) {\n    Object.keys(attrs)\n      .forEach(e => {\n        if (e[0] === 'o' && e[1] === 'n' && e !== e.toLowerCase()) {\n          // @ts-expect-error\n          attrs[e.toLowerCase()] = attrs[e]\n          // @ts-expect-error\n          delete attrs[e]\n          // @ts-expect-error\n        } else if (reactMappings[e]) {\n          // @ts-expect-error\n          attrs[reactMappings[e]] = attrs[e]\n          // @ts-expect-error\n          delete attrs[e]\n        }\n      })\n  }\n  if (children) { return { isSkruvDom: true, t: nodeName, c: [attrs || {}, children] } }\n  return { isSkruvDom: true, t: nodeName, c: [attrs || {}] }\n}\n\nexport const jsx = jsxs\n", "import { render } from 'skruv'\nimport { css, cssTextGenerator } from 'skruv/utils/css.js'\nimport { createState } from 'skruv/utils/state.js'\nimport { syncify } from 'skruv/utils/syncify.js'\n\nconst state = createState({ todos: ['Write todos'] })\n\nconst styles = css`:scope{color:#f1f1f1;background:#0f0f0f}body{max-width:40ch;margin:0 auto}form{display:flex}input{flex:1}a{color:#9b9b9b}`\n\nrender(\n  syncify(\n    <html lang=\"en-US\" class={styles}>\n      <head>\n        <title>{state.todos.getGenerator(0)}</title>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n        <style>{cssTextGenerator}</style>\n      </head>\n      <body>\n        <main>\n          <h1>{state.todos.getGenerator(0)}</h1>\n          <form\n            onsubmit={\n              /** @param {SubmitEvent} e */ e => {\n                e.preventDefault()\n                state.todos.unshift(new FormData(e.target).get('todo'))\n                e.target.reset()\n              }\n            }\n          >\n            <input name=\"todo\"></input>\n            <button>New!</button>\n          </form>\n          <ol>\n            {async function * () {\n              for await (const todos of state.todos) {\n                yield todos.map((todo, i) => (\n                  <li>{todo} <a\n                    href=\"#\"\n                    onclick={ /** @param {MouseEvent} e */e => {\n                      e.preventDefault()\n                      todos.splice(i, 1)\n                    }}\n                  >x</a>\n                  </li>\n                ))\n              }\n            }}\n          </ol>\n        </main>\n      </body>\n    </html>\n  )\n)\n"],
  "mappings": "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",
  "names": ["htmlNS", "svgNS", "mathmlNS", "keyed", "oldKeys", "attributesMap", "domCache", "render", "current", "currentNode", "parentNode", "ns", "forceFull", "txtNode", "_currentNode", "children", "attributes", "oldAttributes", "key", "value", "evt", "e", "keyedNode", "lastKeyCopy", "noChange", "k", "elementFactory", "_", "t", "c", "resolveStyles", "promiseStyles", "resolve", "styleMap", "hash", "str", "i", "css", "strings", "keys", "stylesheet", "prev", "curr", "attrRe", "walkSelectorRe", "scopeRe", "consumeSelector", "raw", "prefix", "leftmost", "scope", "depth", "outer", "char", "match", "updateSelectorText", "selectorText", "found", "consumed", "upgradeRule", "rule", "l", "j", "retval", "sheet", "styleDoc", "styleElem", "e", "upgradedStyles", "cssTextGenerator", "createState", "stateObj", "Handler", "resolve", "target", "key", "value", "proxy", "booted", "acc", "curr", "res", "path", "item", "subProxy", "child", "newValue", "rootProxy", "hydrating", "generatorResults", "hydrationResolve", "hydrationPromise", "resolve", "waitingGens", "process", "value", "key", "parent", "cbparent", "result", "syncify", "root", "newValue", "newVal", "cb", "partialNewVal", "reactMappings", "Fragment", "jsxs", "nodeName", "attributes", "children", "attrs", "e", "jsx", "state", "createState", "styles", "css", "render", "syncify", "jsxs", "jsx", "cssTextGenerator", "e", "todos", "todo", "i"]
}
