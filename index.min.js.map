{
  "version": 3,
  "sources": ["index.js"],
  "sourcesContent": ["const s = Symbol.for('skruvDom')\nconst eventPrefix = 'data-event-'\n/**\n * @typedef {Vnode|Vnode[]|String|Boolean|Number} SkruvChildNode\n * @typedef {SkruvChildNode[]} SkruvChildNodes\n * @typedef {Record<string,(string|boolean|Function|number|Object)>} VnodeAttributes\n */\n/**\n * @typedef {object} Vnode\n * @prop {Symbol} s\n * @prop {String} t\n * @prop {SkruvChildNodes} c\n * @prop {Record<string,(string|boolean|Function|number|Object)> & {_r:{_r:() => boolean}?}} a\n * @prop {{_r:() => boolean}} [_r]\n */\n/**\n * @param {string} t\n * @param  {(Record<string, any>|Vnode)[]} c\n * @returns {Vnode}\n */\n// @ts-ignore: TODO: The check for non-attribute objects does not satisfy TS\nexport const h = (t, ...c) => ({\n  s,\n  t: t.toUpperCase(),\n  ...(\n    // @ts-ignore: its exactly because we don't know if its there that we check it\n    !(c[0]?.[Symbol.asyncIterator]) &&\n        c[0]?.constructor === Object &&\n      c[0]?.s !== s\n      ? {\n        a: c[0],\n        c: c.slice(1)\n      }\n      : {\n        a: {},\n        c: c\n      }\n  )\n})\n\n/** @type {WeakMap<Vnode, Node>} */\nconst keyed = new WeakMap()\n/** @type {Record<string, Node>} */\nconst domCache = {}\n/**\n * @param {Vnode} current\n * @param {Node} _currentNode\n * @param {ParentNode?} parentNode\n * @param {*} isSvg\n * @returns {boolean}\n */\nexport const render = (\n  current,\n  _currentNode = globalThis.document.documentElement,\n  parentNode = _currentNode.parentNode,\n  isSvg = false\n) => {\n  let currentNode = _currentNode\n  const doc = parentNode?.ownerDocument || currentNode.ownerDocument\n  if (!parentNode || !doc || (currentNode && !parentNode.contains(currentNode))) { return false }\n  if (typeof current === 'boolean' || current === null || current === undefined) {\n    if (currentNode) { parentNode.removeChild(currentNode) }\n    return true\n  }\n  if (\n    ((typeof current === 'string' || typeof current === 'number') && currentNode?.nodeName !== '#text') ||\n    (current?.t && currentNode?.nodeName !== current?.t) ||\n    // @ts-ignore: Check for keying\n    (currentNode?.getAttribute?.('data-skruv-key') && currentNode?.getAttribute?.('data-skruv-key') !== current?.a?.['data-skruv-key'])\n  ) {\n    if (typeof current === 'string' || typeof current === 'number') {\n      currentNode = (domCache.text || (domCache.text = doc.createTextNode(''))).cloneNode()\n    } else if (isSvg || current.t === 'svg') {\n      currentNode = (domCache[current.t] || (domCache[current.t] = doc.createElementNS('http://www.w3.org/2000/svg', current.t))).cloneNode()\n    } else {\n      currentNode = (domCache[current.t] || (domCache[current.t] = doc.createElement(current.t))).cloneNode()\n    }\n    if (_currentNode) {\n      parentNode.replaceChild(currentNode, _currentNode)\n    } else {\n      parentNode.appendChild(currentNode)\n    }\n    // @ts-ignore: oncreate should always be callable. TODO: add strict typing\n    if (current?.a?.oncreate) { current.a.oncreate(currentNode) }\n  }\n  if ((typeof current === 'string' || typeof current === 'number')) {\n    // @ts-ignore: We already checked this above. It's not 'never'\n    if (('' + currentNode.data) !== ('' + current)) { currentNode.data = current }\n    return true\n  }\n  if (current._r) { current._r._r = () => render(current, currentNode, parentNode, isSvg) }\n  for (const key in current.a) {\n    if (key[0] === 'o' && key[1] === 'n') {\n      const evt = key.slice(2)\n      // @ts-ignore: TODO: this is a hacky way to store what the last eventlistener was\n      if (!currentNode[eventPrefix + key] || ('' + currentNode[eventPrefix + key]) !== ('' + current.a[key])) {\n        // @ts-ignore: See above\n        if (currentNode[eventPrefix + key]) { currentNode.removeEventListener(evt, currentNode[eventPrefix + key]) }\n        // @ts-ignore: See above\n        currentNode.addEventListener(evt, current.a[key])\n        // @ts-ignore: See above\n        currentNode[eventPrefix + key] = current.a[key]\n      } else if (!current.a[key]) {\n        // @ts-ignore: data-event-* is the old function\n        currentNode.removeEventListener(evt, currentNode[eventPrefix + key])\n      }\n    // @ts-ignore: If this was a text or comment element we would have returned above\n    } else if (current.a[key] !== currentNode.getAttribute(key)) {\n      if (\n        (\n          typeof current.a[key] === 'boolean' &&\n          (\n            (current.t === 'INPUT' && key === 'checked') ||\n            (current.t === 'OPTION' && key === 'selected')\n          )\n        ) || typeof current.a[key] === 'object' // Support complex data passing for custom elements\n      ) {\n        // @ts-ignore TS does not think HTML properties are accessible directly?\n        currentNode[key] = current.a[key]\n      }\n      if (current.a[key]) {\n        // @ts-ignore: If this was a text or comment element we would have returned above\n        currentNode.setAttribute(key, '' + current.a[key])\n      } else {\n        // @ts-ignore: If this was a text or comment element we would have returned above\n        currentNode.removeAttribute(key)\n      }\n    }\n  }\n  const children = current.c.flat(Infinity)\n  if (!children.length && currentNode.childNodes.length) {\n    if (current.a['data-skruv-wait-for-not-empty']) {\n      return true\n    }\n    // @ts-ignore: If this was a text or comment element we would have returned above\n    currentNode.replaceChildren()\n    return true\n  }\n  if (currentNode.childNodes.length > children.length) {\n    for (let i = children.length; i < currentNode.childNodes.length; i++) {\n      currentNode.removeChild(currentNode.childNodes[i])\n    }\n  }\n  for (let i = 0; i < children.length; i++) {\n    // @ts-ignore: TODO: the flattening seems to confuse TS\n    if (keyed.has(children[i])) {\n      // @ts-ignore: See above\n      const keyedNode = keyed.get(children[i])\n      if (keyedNode !== currentNode.childNodes[i]) {\n        if (keyedNode === currentNode.childNodes[i + 1]) {\n          currentNode.removeChild(currentNode.childNodes[i])\n        // @ts-ignore: See above\n        } else if (keyed.has(children[i + 1]) && keyed.get(children[i + 1]) === currentNode.childNodes[i]) {\n          // @ts-ignore\n          currentNode.insertBefore(keyedNode, currentNode.childNodes[i])\n        } else if (currentNode.childNodes[i]) {\n          // @ts-ignore\n          currentNode.replaceChild(keyedNode, currentNode.childNodes[i])\n        } else {\n          // @ts-ignore\n          currentNode.appendChild(keyedNode)\n        }\n        // @ts-ignore: See above\n        keyed.set(children[i], currentNode.childNodes[i])\n      }\n      continue\n    }\n    // @ts-ignore: See above\n    render(children[i], currentNode.childNodes[i] || false, currentNode, isSvg)\n  }\n  keyed.set(current, currentNode)\n  return true\n}\n\nexport const elementFactory = new Proxy({}, {\n  /** @type {(_: any, name: string) => (arg0: (Record<string, any>|Vnode)[]) => Vnode} */\n  get: (_, name) => (...c) => h(name, ...c)\n})\n"],
  "mappings": "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",
  "names": ["s", "eventPrefix", "h", "t", "c", "_a", "_b", "_c", "keyed", "domCache", "render", "current", "_currentNode", "parentNode", "isSvg", "_d", "currentNode", "doc", "key", "evt", "children", "i", "keyedNode", "elementFactory", "_", "name"]
}
