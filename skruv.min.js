var _ = Object.defineProperty; var A = (e, t) => { for (var s in t) { _(e, s, { get: t[s], enumerable: !0 }) } }; var v = e => { const t = class {constructor (n) { this.name = n, this._scheduled = !1, this._skruv_promise = new Promise(r => { this._skruv_resolve = r }) }_resolve () { this._skruv_parent && this._skruv_parent._resolve && this._skruv_parent._resolve(), !this._scheduled && (this._scheduled = !0, window.requestAnimationFrame(() => { this._skruv_resolve(), this._skruv_promise = new Promise(n => { this._skruv_resolve = n }), this._scheduled = !1 })) }set (n, r, p) { return r === '_skruv_parent' ? (this._skruv_parent = p, !0) : (n[r] !== p && (n[r] = this.recurse(r, p, n)), !0) }get (n, r, p) { return r === 'getGenerator' ? i => ({ key: [i, n], [Symbol.asyncIterator]: () => { let a = !1; return { next: async () => (a ? await this._skruv_promise : a = !0, { done: !1, value: p[i] }) } } }) : r === 'skruv_resolve' ? () => this._resolve() : r === 'skruv_unwrap_proxy' ? n.constructor === Object ? Object.getOwnPropertyNames(n).reduce((i, a) => (i[a] = n[a]?.skruv_unwrap_proxy || n[a], i), {}) : n.constructor === Array ? n.map(i => i?.skruv_unwrap_proxy || i) : n : r === Symbol.asyncIterator ? () => { let i = !1; return { next: async () => (i ? await this._skruv_promise : i = !0, { done: !1, value: p }) } } : n[r] }deleteProperty (n, r) { const p = delete n[r]; return this._resolve(), p }recurse (n, r, p) { if (r && r.constructor) { if (r.constructor === Object && p?.[n]?.constructor === Object || r.constructor === Array && p?.[n]?.constructor === Array) { for (const i of Object.getOwnPropertyNames(r)) { p[n][i] !== r[i] && (p[n][i] = r[i]) } for (const i of Object.getOwnPropertyNames(p[n]).filter(a => !Object.getOwnPropertyNames(r).includes(a))) { delete p[n][i], this._resolve() } return p[n] } else if (r.constructor === Object) { const i = new this.constructor(`${this.name}.${n}`); r = Object.keys(r).reduce((a, x) => (a[x] = this.recurse(`${n}.${x}`, r[x]), typeof a[x] === 'object' && a[x] !== null && (a[x]._skruv_parent = i), a), {}), r = new Proxy(r, i), r._skruv_parent = this, this._resolve() } else if (r.constructor === Array) { const i = new this.constructor(`${this.name}.${n}`); r = r.map((a, x) => { const u = this.recurse(`${n}[${x}]`, a); return typeof u === 'object' && u !== null && (u._skruv_parent = i), u }), r = new Proxy(r, i), r._skruv_parent = this, this._resolve() } else { this._resolve() } } else { this._resolve() } return r }}; const s = new Proxy(e.constructor === Array ? [] : {}, new t('root')); return Object.assign(s, e), s }; var L = v; var l = new WeakMap(); var d = (e, t) => { t.skruvActiveAttributeGenerators = new Set(); for (const [s, c] of Object.entries(e.attributes)) { if (s === 'key') { t.skruvkey = c; continue } if (c?.[Symbol.asyncIterator] || c instanceof Function && c?.prototype?.toString?.() === '[object AsyncGenerator]') { return t.skruvActiveAttributeGenerators.add(c), c.booted || (c.booted = !0, b(c, () => t.skruvActiveAttributeGenerators?.has(c) ? (c.result === !1 && t.getAttribute?.(s) ? t.removeAttribute && t.removeAttribute(s) : ((s === 'value' || s === 'checked' || s === 'selected') && (t[s] = c.result), t.setAttribute && t.setAttribute(s, c.result)), !0) : !1)), e.result } s.slice(0, 2) === 'on' && c instanceof Function ? (t.skruvListeners || (t.skruvListeners = {}), t.skruvListeners[s] && t.skruvListeners[s].toString() !== c.toString() && (t.removeEventListener(s.slice(2), t.skruvListeners[s]), t.skruvListeners[s] = null), t.skruvListeners[s] || (t.skruvListeners[s] = c, t.addEventListener(s.slice(2), t.skruvListeners[s]))) : (c !== !1 && t.getAttribute?.(s) !== c && ((s === 'value' || s === 'checked' || s === 'selected') && (t[s] = c), t.setAttribute && t.setAttribute(s, c)), c === !1 && t.getAttribute?.(s) && t.removeAttribute && t.removeAttribute(s)) } }; var h = (e, t) => e.nodeName === '#comment' ? document.createComment(e.data || '') : e.nodeName === '#text' ? document.createTextNode(e.data || '') : t ? document.createElementNS('http://www.w3.org/2000/svg', e.nodeName) : document.createElement(e.nodeName); var b = async (e, t) => { for await (const s of e?.[Symbol.asyncIterator] ? e : e()) { if (e.result = s, !t()) { break } } }; var y = (e, t, s, c = e) => {
  const n = e.map(r => { if (typeof r === 'boolean' || typeof r > 'u') { return !1 } if (typeof r === 'string' || typeof r === 'number') { return { nodeName: '#text', attributes: {}, childNodes: [], data: r.toString() } } if (r?.[Symbol.asyncIterator] || r instanceof Function && r?.prototype?.toString?.() === '[object AsyncGenerator]') { const p = r; return t.skruvActiveGenerators && t.skruvActiveGenerators.add(p), p.booted || (p.booted = !0, b(p, () => !t.skruvActiveGenerators || t.skruvActiveGenerators && !t.skruvActiveGenerators.has(p) ? !1 : (f(c, t, s), !0))), p.result } else { if (typeof r === 'function') { return r() } if (r?.nodeName || Array.isArray(r)) { return r } } return console.log('unkown type in render: ', r), !1 }).flat(1 / 0)
    .filter(r => !!r); return n.find(r => !r?.nodeName) ? y(n, t, s, c) : n
}; var f = (e, t, s) => { if (!Array.isArray(e)) { return } t.skruvActiveGenerators = new Set(); const c = Array.from(t.childNodes); const n = y(e, t, s); c.slice(n.length).forEach(r => { r.parentNode && r.parentNode.removeChild && r.parentNode.removeChild(r), r.dispatchEvent(new CustomEvent('remove')) }), n.forEach((r, p) => { const i = c[p]; k(r, i, t, s) }) }; var k = (e, t, s, c) => { if (!e.nodeName) { return } let n; if (e.attributes?.key && l.has(e.attributes?.key)) { const r = l.get(e.attributes?.key); t && r !== t && s.replaceChild && s.replaceChild(r, t), t || s.append && s.append(r), d(e, r), !e?.attributes?.opaque && (e.childNodes.length || r.childNodes.length) && f(e.childNodes, r, c); return }t ? t.nodeName.toLowerCase() !== e.nodeName.toLowerCase() || e.attributes?.key !== t.skruvkey ? (n = h(e, c), s.replaceChild(n, t), e.attributes?.oncreate && e.attributes.oncreate(n), t.dispatchEvent(new CustomEvent('remove', { detail: { newNode: n } }))) : (t.data !== e.data && (t.data = e.data), n = t) : (n = h(e, c), s.append && s.append(n), e.attributes?.oncreate && e.attributes.oncreate(n)), e.attributes?.key && l.set(e.attributes?.key, n), d(e, n), !e?.attributes?.opaque && (e.childNodes.length || n.childNodes.length) && f(e.childNodes, n, c) }; var C = (e, t = document.documentElement, s = t.parentNode, c = !1) => { if (!s) { throw new Error('Skruv: No parent to render to') } k(e, t, s, c) }; var
  G = C; var w = {}; A(w, { ChildNode: () => O, ChildNodes: () => S, SkruvIterableType: () => P, Vnode: () => m, a: () => j, abbr: () => M, acronym: () => E, address: () => F, animate: () => fo, animateMotion: () => mo, animateTransform: () => ho, applet: () => T, area: () => I, article: () => q, aside: () => D, audio: () => $, b: () => B, base: () => H, basefont: () => R, bdi: () => V, bdo: () => z, bgsound: () => W, big: () => J, blink: () => K, blockquote: () => Q, body: () => U, br: () => X, button: () => Y, canvas: () => Z, caption: () => N, center: () => tt, circle: () => bo, cite: () => et, clipPath: () => yo, code: () => ot, col: () => rt, colgroup: () => st, command: () => nt, content: () => ct, css: () => Gr, data: () => it, datalist: () => pt, dd: () => at, defs: () => ko, del: () => xt, desc: () => go, details: () => ut, dfn: () => lt, dialog: () => ft, dir: () => mt, discard: () => wo, div: () => dt, dl: () => ht, dt: () => bt, element: () => yt, ellipse: () => _o, em: () => kt, embed: () => gt, feBlend: () => Ao, feColorMatrix: () => vo, feComponentTransfer: () => Lo, feComposite: () => Co, feConvolveMatrix: () => Go, feDiffuseLighting: () => So, feDisplacementMap: () => Oo, feDistantLight: () => Po, feDropShadow: () => jo, feFlood: () => Mo, feFuncA: () => Eo, feFuncB: () => Fo, feFuncG: () => To, feFuncR: () => Io, feGaussianBlur: () => qo, feImage: () => Do, feMerge: () => $o, feMergeNode: () => Bo, feMorphology: () => Ho, feOffset: () => Ro, fePointLight: () => Vo, feSpecularLighting: () => zo, feSpotLight: () => Wo, feTile: () => Jo, feTurbulence: () => Ko, fieldset: () => wt, figcaption: () => _t, figure: () => At, filter: () => Qo, font: () => vt, footer: () => Lt, foreignObject: () => Uo, form: () => Ct, frame: () => Gt, frameset: () => St, g: () => Xo, h: () => o, h1: () => Ot, h2: () => Pt, h3: () => jt, h4: () => Mt, h5: () => Et, h6: () => Ft, hatch: () => Yo, hatchpath: () => Zo, head: () => Tt, header: () => It, hgroup: () => qt, hr: () => Dt, html: () => $t, i: () => Bt, iframe: () => Ht, image: () => Rt, img: () => Vt, input: () => zt, ins: () => Wt, isindex: () => Jt, kbd: () => Kt, keygen: () => Qt, label: () => Ut, legend: () => Xt, li: () => Yt, line: () => No, linearGradient: () => tr, link: () => Zt, listing: () => Nt, main: () => te, map: () => ee, mark: () => oe, marker: () => er, marquee: () => re, mask: () => or, menu: () => se, menuitem: () => ne, mesh: () => rr, meshgradient: () => sr, meshpatch: () => nr, meshrow: () => cr, meta: () => ce, metadata: () => ir, meter: () => ie, mpath: () => pr, multicol: () => pe, nav: () => ae, nextid: () => xe, nobr: () => ue, noembed: () => le, noframes: () => fe, noscript: () => me, object: () => de, ol: () => he, optgroup: () => be, option: () => ye, output: () => ke, p: () => ge, param: () => we, path: () => ar, pattern: () => xr, picture: () => _e, plaintext: () => Ae, polygon: () => ur, polyline: () => lr, pre: () => ve, progress: () => Le, q: () => Ce, radialGradient: () => fr, rb: () => Ge, rect: () => mr, rp: () => Se, rt: () => Oe, rtc: () => Pe, ruby: () => je, s: () => Me, samp: () => Ee, script: () => Fe, section: () => Te, select: () => Ie, set: () => dr, shadow: () => qe, slot: () => De, small: () => $e, solidcolor: () => hr, source: () => Be, spacer: () => He, span: () => Re, stop: () => br, strike: () => Ve, strong: () => ze, style: () => g, sub: () => We, summary: () => Je, sup: () => Ke, svg: () => yr, switchElem: () => kr, symbol: () => gr, table: () => Qe, tbody: () => Ue, td: () => Xe, template: () => Ye, text: () => wr, textPath: () => _r, textarea: () => Ze, tfoot: () => Ne, th: () => to, thead: () => eo, time: () => oo, title: () => ro, tr: () => so, track: () => no, tspan: () => Ar, tt: () => co, u: () => io, ul: () => po, unknown: () => vr, use: () => Lr, varElem: () => ao, video: () => xo, view: () => Cr, wbr: () => uo, xmp: () => lo }); var m = { nodeName: '', attributes: {}, childNodes: [] }; var S = []; var O = m; var P = (async function * () { yield m }()); var o = (e, t = {}, ...s) => ({ nodeName: e, attributes: t, childNodes: s }); var j = (e = {}, ...t) => o('a', e, ...t); var M = (e = {}, ...t) => o('abbr', e, ...t); var E = (e = {}, ...t) => o('acronym', e, ...t); var F = (e = {}, ...t) => o('address', e, ...t); var T = (e = {}, ...t) => o('applet', e, ...t); var I = (e = {}, ...t) => o('area', e, ...t); var q = (e = {}, ...t) => o('article', e, ...t); var D = (e = {}, ...t) => o('aside', e, ...t); var $ = (e = {}, ...t) => o('audio', e, ...t); var B = (e = {}, ...t) => o('b', e, ...t); var H = (e = {}, ...t) => o('base', e, ...t); var R = (e = {}, ...t) => o('basefont', e, ...t); var V = (e = {}, ...t) => o('bdi', e, ...t); var z = (e = {}, ...t) => o('bdo', e, ...t); var W = (e = {}, ...t) => o('bgsound', e, ...t); var J = (e = {}, ...t) => o('big', e, ...t); var K = (e = {}, ...t) => o('blink', e, ...t); var Q = (e = {}, ...t) => o('blockquote', e, ...t); var U = (e = {}, ...t) => o('body', e, ...t); var X = (e = {}, ...t) => o('br', e, ...t); var Y = (e = {}, ...t) => o('button', e, ...t); var Z = (e = {}, ...t) => o('canvas', e, ...t); var N = (e = {}, ...t) => o('caption', e, ...t); var tt = (e = {}, ...t) => o('center', e, ...t); var et = (e = {}, ...t) => o('cite', e, ...t); var ot = (e = {}, ...t) => o('code', e, ...t); var rt = (e = {}, ...t) => o('col', e, ...t); var st = (e = {}, ...t) => o('colgroup', e, ...t); var nt = (e = {}, ...t) => o('command', e, ...t); var ct = (e = {}, ...t) => o('content', e, ...t); var it = (e = {}, ...t) => o('data', e, ...t); var pt = (e = {}, ...t) => o('datalist', e, ...t); var at = (e = {}, ...t) => o('dd', e, ...t); var xt = (e = {}, ...t) => o('del', e, ...t); var ut = (e = {}, ...t) => o('details', e, ...t); var lt = (e = {}, ...t) => o('dfn', e, ...t); var ft = (e = {}, ...t) => o('dialog', e, ...t); var mt = (e = {}, ...t) => o('dir', e, ...t); var dt = (e = {}, ...t) => o('div', e, ...t); var ht = (e = {}, ...t) => o('dl', e, ...t); var bt = (e = {}, ...t) => o('dt', e, ...t); var yt = (e = {}, ...t) => o('element', e, ...t); var kt = (e = {}, ...t) => o('em', e, ...t); var gt = (e = {}, ...t) => o('embed', e, ...t); var wt = (e = {}, ...t) => o('fieldset', e, ...t); var _t = (e = {}, ...t) => o('figcaption', e, ...t); var At = (e = {}, ...t) => o('figure', e, ...t); var vt = (e = {}, ...t) => o('font', e, ...t); var Lt = (e = {}, ...t) => o('footer', e, ...t); var Ct = (e = {}, ...t) => o('form', e, ...t); var Gt = (e = {}, ...t) => o('frame', e, ...t); var St = (e = {}, ...t) => o('frameset', e, ...t); var Ot = (e = {}, ...t) => o('h1', e, ...t); var Pt = (e = {}, ...t) => o('h2', e, ...t); var jt = (e = {}, ...t) => o('h3', e, ...t); var Mt = (e = {}, ...t) => o('h4', e, ...t); var Et = (e = {}, ...t) => o('h5', e, ...t); var Ft = (e = {}, ...t) => o('h6', e, ...t); var Tt = (e = {}, ...t) => o('head', e, ...t); var It = (e = {}, ...t) => o('header', e, ...t); var qt = (e = {}, ...t) => o('hgroup', e, ...t); var Dt = (e = {}, ...t) => o('hr', e, ...t); var $t = (e = {}, ...t) => o('html', e, ...t); var Bt = (e = {}, ...t) => o('i', e, ...t); var Ht = (e = {}, ...t) => o('iframe', e, ...t); var Rt = (e = {}, ...t) => o('image', e, ...t); var Vt = (e = {}, ...t) => o('img', e, ...t); var zt = (e = {}, ...t) => o('input', e, ...t); var Wt = (e = {}, ...t) => o('ins', e, ...t); var Jt = (e = {}, ...t) => o('isindex', e, ...t); var Kt = (e = {}, ...t) => o('kbd', e, ...t); var Qt = (e = {}, ...t) => o('keygen', e, ...t); var Ut = (e = {}, ...t) => o('label', e, ...t); var Xt = (e = {}, ...t) => o('legend', e, ...t); var Yt = (e = {}, ...t) => o('li', e, ...t); var Zt = (e = {}, ...t) => o('link', e, ...t); var Nt = (e = {}, ...t) => o('listing', e, ...t); var te = (e = {}, ...t) => o('main', e, ...t); var ee = (e = {}, ...t) => o('map', e, ...t); var oe = (e = {}, ...t) => o('mark', e, ...t); var re = (e = {}, ...t) => o('marquee', e, ...t); var se = (e = {}, ...t) => o('menu', e, ...t); var ne = (e = {}, ...t) => o('menuitem', e, ...t); var ce = (e = {}, ...t) => o('meta', e, ...t); var ie = (e = {}, ...t) => o('meter', e, ...t); var pe = (e = {}, ...t) => o('multicol', e, ...t); var ae = (e = {}, ...t) => o('nav', e, ...t); var xe = (e = {}, ...t) => o('nextid', e, ...t); var ue = (e = {}, ...t) => o('nobr', e, ...t); var le = (e = {}, ...t) => o('noembed', e, ...t); var fe = (e = {}, ...t) => o('noframes', e, ...t); var me = (e = {}, ...t) => o('noscript', e, ...t); var de = (e = {}, ...t) => o('object', e, ...t); var he = (e = {}, ...t) => o('ol', e, ...t); var be = (e = {}, ...t) => o('optgroup', e, ...t); var ye = (e = {}, ...t) => o('option', e, ...t); var ke = (e = {}, ...t) => o('output', e, ...t); var ge = (e = {}, ...t) => o('p', e, ...t); var we = (e = {}, ...t) => o('param', e, ...t); var _e = (e = {}, ...t) => o('picture', e, ...t); var Ae = (e = {}, ...t) => o('plaintext', e, ...t); var ve = (e = {}, ...t) => o('pre', e, ...t); var Le = (e = {}, ...t) => o('progress', e, ...t); var Ce = (e = {}, ...t) => o('q', e, ...t); var Ge = (e = {}, ...t) => o('rb', e, ...t); var Se = (e = {}, ...t) => o('rp', e, ...t); var Oe = (e = {}, ...t) => o('rt', e, ...t); var Pe = (e = {}, ...t) => o('rtc', e, ...t); var je = (e = {}, ...t) => o('ruby', e, ...t); var Me = (e = {}, ...t) => o('s', e, ...t); var Ee = (e = {}, ...t) => o('samp', e, ...t); var Fe = (e = {}, ...t) => o('script', e, ...t); var Te = (e = {}, ...t) => o('section', e, ...t); var Ie = (e = {}, ...t) => o('select', e, ...t); var qe = (e = {}, ...t) => o('shadow', e, ...t); var De = (e = {}, ...t) => o('slot', e, ...t); var $e = (e = {}, ...t) => o('small', e, ...t); var Be = (e = {}, ...t) => o('source', e, ...t); var He = (e = {}, ...t) => o('spacer', e, ...t); var Re = (e = {}, ...t) => o('span', e, ...t); var Ve = (e = {}, ...t) => o('strike', e, ...t); var ze = (e = {}, ...t) => o('strong', e, ...t); var g = (e = {}, ...t) => o('style', e, ...t); var We = (e = {}, ...t) => o('sub', e, ...t); var Je = (e = {}, ...t) => o('summary', e, ...t); var Ke = (e = {}, ...t) => o('sup', e, ...t); var Qe = (e = {}, ...t) => o('table', e, ...t); var Ue = (e = {}, ...t) => o('tbody', e, ...t); var Xe = (e = {}, ...t) => o('td', e, ...t); var Ye = (e = {}, ...t) => o('template', e, ...t); var Ze = (e = {}, ...t) => o('textarea', e, ...t); var Ne = (e = {}, ...t) => o('tfoot', e, ...t); var to = (e = {}, ...t) => o('th', e, ...t); var eo = (e = {}, ...t) => o('thead', e, ...t); var oo = (e = {}, ...t) => o('time', e, ...t); var ro = (e = {}, ...t) => o('title', e, ...t); var so = (e = {}, ...t) => o('tr', e, ...t); var no = (e = {}, ...t) => o('track', e, ...t); var co = (e = {}, ...t) => o('tt', e, ...t); var io = (e = {}, ...t) => o('u', e, ...t); var po = (e = {}, ...t) => o('ul', e, ...t); var ao = (e = {}, ...t) => o('var', e, ...t); var xo = (e = {}, ...t) => o('video', e, ...t); var uo = (e = {}, ...t) => o('wbr', e, ...t); var lo = (e = {}, ...t) => o('xmp', e, ...t); var fo = (e = {}, ...t) => o('animate', e, ...t); var mo = (e = {}, ...t) => o('animateMotion', e, ...t); var ho = (e = {}, ...t) => o('animateTransform', e, ...t); var bo = (e = {}, ...t) => o('circle', e, ...t); var yo = (e = {}, ...t) => o('clipPath', e, ...t); var ko = (e = {}, ...t) => o('defs', e, ...t); var go = (e = {}, ...t) => o('desc', e, ...t); var wo = (e = {}, ...t) => o('discard', e, ...t); var _o = (e = {}, ...t) => o('ellipse', e, ...t); var Ao = (e = {}, ...t) => o('feBlend', e, ...t); var vo = (e = {}, ...t) => o('feColorMatrix', e, ...t); var Lo = (e = {}, ...t) => o('feComponentTransfer', e, ...t); var Co = (e = {}, ...t) => o('feComposite', e, ...t); var Go = (e = {}, ...t) => o('feConvolveMatrix', e, ...t); var So = (e = {}, ...t) => o('feDiffuseLighting', e, ...t); var Oo = (e = {}, ...t) => o('feDisplacementMap', e, ...t); var Po = (e = {}, ...t) => o('feDistantLight', e, ...t); var jo = (e = {}, ...t) => o('feDropShadow', e, ...t); var Mo = (e = {}, ...t) => o('feFlood', e, ...t); var Eo = (e = {}, ...t) => o('feFuncA', e, ...t); var Fo = (e = {}, ...t) => o('feFuncB', e, ...t); var To = (e = {}, ...t) => o('feFuncG', e, ...t); var Io = (e = {}, ...t) => o('feFuncR', e, ...t); var qo = (e = {}, ...t) => o('feGaussianBlur', e, ...t); var Do = (e = {}, ...t) => o('feImage', e, ...t); var $o = (e = {}, ...t) => o('feMerge', e, ...t); var Bo = (e = {}, ...t) => o('feMergeNode', e, ...t); var Ho = (e = {}, ...t) => o('feMorphology', e, ...t); var Ro = (e = {}, ...t) => o('feOffset', e, ...t); var Vo = (e = {}, ...t) => o('fePointLight', e, ...t); var zo = (e = {}, ...t) => o('feSpecularLighting', e, ...t); var Wo = (e = {}, ...t) => o('feSpotLight', e, ...t); var Jo = (e = {}, ...t) => o('feTile', e, ...t); var Ko = (e = {}, ...t) => o('feTurbulence', e, ...t); var Qo = (e = {}, ...t) => o('filter', e, ...t); var Uo = (e = {}, ...t) => o('foreignObject', e, ...t); var Xo = (e = {}, ...t) => o('g', e, ...t); var Yo = (e = {}, ...t) => o('hatch', e, ...t); var Zo = (e = {}, ...t) => o('hatchpath', e, ...t); var No = (e = {}, ...t) => o('line', e, ...t); var tr = (e = {}, ...t) => o('linearGradient', e, ...t); var er = (e = {}, ...t) => o('marker', e, ...t); var or = (e = {}, ...t) => o('mask', e, ...t); var rr = (e = {}, ...t) => o('mesh', e, ...t); var sr = (e = {}, ...t) => o('meshgradient', e, ...t); var nr = (e = {}, ...t) => o('meshpatch', e, ...t); var cr = (e = {}, ...t) => o('meshrow', e, ...t); var ir = (e = {}, ...t) => o('metadata', e, ...t); var pr = (e = {}, ...t) => o('mpath', e, ...t); var ar = (e = {}, ...t) => o('path', e, ...t); var xr = (e = {}, ...t) => o('pattern', e, ...t); var ur = (e = {}, ...t) => o('polygon', e, ...t); var lr = (e = {}, ...t) => o('polyline', e, ...t); var fr = (e = {}, ...t) => o('radialGradient', e, ...t); var mr = (e = {}, ...t) => o('rect', e, ...t); var dr = (e = {}, ...t) => o('set', e, ...t); var hr = (e = {}, ...t) => o('solidcolor', e, ...t); var br = (e = {}, ...t) => o('stop', e, ...t); var yr = (e = {}, ...t) => o('svg', e, ...t); var kr = (e = {}, ...t) => o('switch', e, ...t); var gr = (e = {}, ...t) => o('symbol', e, ...t); var wr = (e = {}, ...t) => o('text', e, ...t); var _r = (e = {}, ...t) => o('textPath', e, ...t); var Ar = (e = {}, ...t) => o('tspan', e, ...t); var vr = (e = {}, ...t) => o('unknown', e, ...t); var Lr = (e = {}, ...t) => o('use', e, ...t); var Cr = (e = {}, ...t) => o('view', e, ...t); var Gr = (e, ...t) => g({}, ...e.reduce((s, c, n) => (s.push(c), s.push(t?.[n]?.toString() || ''), s), [])); export { L as createState, w as elements, G as render }
// # sourceMappingURL=skruv.min.js.map
