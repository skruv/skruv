var Ye = Object.create; var ge = Object.defineProperty; var We = Object.getOwnPropertyDescriptor; var Xe = Object.getOwnPropertyNames; var Ze = Object.getPrototypeOf; var ze = Object.prototype.hasOwnProperty; var c = (t, e) => () => (e || t((e = { exports: {} }).exports, e), e.exports); var Qe = (t, e, r, S) => { if (e && typeof e === 'object' || typeof e === 'function') { for (const i of Xe(e)) { !ze.call(t, i) && i !== r && ge(t, i, { get: () => e[i], enumerable: !(S = We(e, i)) || S.enumerable }) } } return t }; var et = (t, e, r) => (r = t != null ? Ye(Ze(t)) : {}, Qe(e || !t || !t.__esModule ? ge(r, 'default', { value: t, enumerable: !0 }) : r, t)); var oe = c(be => { var xe = {}; xe.StyleSheet = function () { this.parentStyleSheet = null }; be.StyleSheet = xe.StyleSheet }); var y = c(Ee => { var C = {}; C.CSSRule = function () { this.parentRule = null, this.parentStyleSheet = null }; C.CSSRule.UNKNOWN_RULE = 0; C.CSSRule.STYLE_RULE = 1; C.CSSRule.CHARSET_RULE = 2; C.CSSRule.IMPORT_RULE = 3; C.CSSRule.MEDIA_RULE = 4; C.CSSRule.FONT_FACE_RULE = 5; C.CSSRule.PAGE_RULE = 6; C.CSSRule.KEYFRAMES_RULE = 7; C.CSSRule.KEYFRAME_RULE = 8; C.CSSRule.MARGIN_RULE = 9; C.CSSRule.NAMESPACE_RULE = 10; C.CSSRule.COUNTER_STYLE_RULE = 11; C.CSSRule.SUPPORTS_RULE = 12; C.CSSRule.DOCUMENT_RULE = 13; C.CSSRule.FONT_FEATURE_VALUES_RULE = 14; C.CSSRule.VIEWPORT_RULE = 15; C.CSSRule.REGION_STYLE_RULE = 16; C.CSSRule.prototype = { constructor: C.CSSRule }; Ee.CSSRule = C.CSSRule }); var j = c(we => {
  var m = { CSSStyleDeclaration: D().CSSStyleDeclaration, CSSRule: y().CSSRule }; m.CSSStyleRule = function () { m.CSSRule.call(this), this.selectorText = '', this.style = new m.CSSStyleDeclaration(), this.style.parentRule = this }; m.CSSStyleRule.prototype = new m.CSSRule(); m.CSSStyleRule.prototype.constructor = m.CSSStyleRule; m.CSSStyleRule.prototype.type = 1; Object.defineProperty(m.CSSStyleRule.prototype, 'cssText', { get: function () { var t; return this.selectorText ? t = this.selectorText + ' {' + this.style.cssText + '}' : t = '', t }, set: function (t) { var e = m.CSSStyleRule.parse(t); this.style = e.style, this.selectorText = e.selectorText } }); m.CSSStyleRule.parse = function (t) {
    for (var e = 0, r = 'selector', S, i = e, s = '', l = { selector: !0, value: !0 }, p = new m.CSSStyleRule(), n, a = '', u; u = t.charAt(e); e++) {
      switch (u) {
        case ' ':case '	':case '\r':case `
`:case '\f':if (l[r]) {
          switch (t.charAt(e - 1)) {
            case ' ':case '	':case '\r':case `
`:case '\f':break; default:s += ' '; break
          }
        } break; case '"':if (i = e + 1, S = t.indexOf('"', i) + 1, !S) { throw '" is missing' } s += t.slice(e, S), e = S - 1; break; case "'":if (i = e + 1, S = t.indexOf("'", i) + 1, !S) { throw "' is missing" } s += t.slice(e, S), e = S - 1; break; case '/':if (t.charAt(e + 1) === '*') { if (e += 2, S = t.indexOf('*/', e), S === -1) { throw new SyntaxError('Missing */') } e = S + 1 } else { s += u } break; case '{':r === 'selector' && (p.selectorText = s.trim(), s = '', r = 'name'); break; case ':':r === 'name' ? (n = s.trim(), s = '', r = 'value') : s += u; break; case '!':r === 'value' && t.indexOf('!important', e) === e ? (a = 'important', e += 9) : s += u; break; case ';':r === 'value' ? (p.style.setProperty(n, s.trim(), a), a = '', s = '', r = 'name') : s += u; break; case '}':if (r === 'value') { p.style.setProperty(n, s.trim(), a), a = '', s = '' } else { if (r === 'name') { break } s += u }r = 'selector'; break; default:s += u; break
      }
    } return p
  }; we.CSSStyleRule = m.CSSStyleRule
}); var J = c(Me => {
  var d = { StyleSheet: oe().StyleSheet, CSSStyleRule: j().CSSStyleRule }; d.CSSStyleSheet = function () { d.StyleSheet.call(this), this.cssRules = [] }; d.CSSStyleSheet.prototype = new d.StyleSheet(); d.CSSStyleSheet.prototype.constructor = d.CSSStyleSheet; d.CSSStyleSheet.prototype.insertRule = function (t, e) { if (e < 0 || e > this.cssRules.length) { throw new RangeError('INDEX_SIZE_ERR') } var r = d.parse(t).cssRules[0]; return r.parentStyleSheet = this, this.cssRules.splice(e, 0, r), e }; d.CSSStyleSheet.prototype.deleteRule = function (t) { if (t < 0 || t >= this.cssRules.length) { throw new RangeError('INDEX_SIZE_ERR') } this.cssRules.splice(t, 1) }; d.CSSStyleSheet.prototype.toString = function () {
    for (var t = '', e = this.cssRules, r = 0; r < e.length; r++) {
      t += e[r].cssText + `
`
    } return t
  }; Me.CSSStyleSheet = d.CSSStyleSheet; d.parse = Z().parse
}); var Q = c(_e => { var z = {}; z.MediaList = function () { this.length = 0 }; z.MediaList.prototype = { constructor: z.MediaList, get mediaText () { return Array.prototype.join.call(this, ', ') }, set mediaText (t) { for (var e = t.split(','), r = this.length = e.length, S = 0; S < r; S++) { this[S] = e[S].trim() } }, appendMedium: function (t) { Array.prototype.indexOf.call(this, t) === -1 && (this[this.length] = t, this.length++) }, deleteMedium: function (t) { var e = Array.prototype.indexOf.call(this, t); e !== -1 && Array.prototype.splice.call(this, e, 1) } }; _e.MediaList = z.MediaList }); var ne = c(Oe => {
  var g = { CSSRule: y().CSSRule, CSSStyleSheet: J().CSSStyleSheet, MediaList: Q().MediaList }; g.CSSImportRule = function () { g.CSSRule.call(this), this.href = '', this.media = new g.MediaList(), this.styleSheet = new g.CSSStyleSheet() }; g.CSSImportRule.prototype = new g.CSSRule(); g.CSSImportRule.prototype.constructor = g.CSSImportRule; g.CSSImportRule.prototype.type = 3; Object.defineProperty(g.CSSImportRule.prototype, 'cssText', { get: function () { var t = this.media.mediaText; return '@import url(' + this.href + ')' + (t ? ' ' + t : '') + ';' },
    set: function (t) {
      for (var e = 0, r = '', S = '', i, s; s = t.charAt(e); e++) {
        switch (s) {
          case ' ':case '	':case '\r':case `
`:case '\f':r === 'after-import' ? r = 'url' : S += s; break; case '@':!r && t.indexOf('@import', e) === e && (r = 'after-import', e += 6, S = ''); break; case 'u':if (r === 'url' && t.indexOf('url(', e) === e) { if (i = t.indexOf(')', e + 1), i === -1) { throw e + ': ")" not found' } e += 4; var l = t.slice(e, i); l[0] === l[l.length - 1] && (l[0] === '"' || l[0] === "'") && (l = l.slice(1, -1)), this.href = l, e = i, r = 'media' } break; case '"':if (r === 'url') { if (i = t.indexOf('"', e + 1), !i) { throw e + ': \'"\' not found' } this.href = t.slice(e + 1, i), e = i, r = 'media' } break; case "'":if (r === 'url') { if (i = t.indexOf("'", e + 1), !i) { throw e + ': "\'" not found' } this.href = t.slice(e + 1, i), e = i, r = 'media' } break; case ';':r === 'media' && S && (this.media.mediaText = S.trim()); break; default:r === 'media' && (S += s); break
        }
      }
    } }); Oe.CSSImportRule = g.CSSImportRule
}); var F = c(qe => { var b = { CSSRule: y().CSSRule }; b.CSSGroupingRule = function () { b.CSSRule.call(this), this.cssRules = [] }; b.CSSGroupingRule.prototype = new b.CSSRule(); b.CSSGroupingRule.prototype.constructor = b.CSSGroupingRule; b.CSSGroupingRule.prototype.insertRule = function (e, r) { if (r < 0 || r > this.cssRules.length) { throw new RangeError('INDEX_SIZE_ERR') } var S = b.parse(e).cssRules[0]; return S.parentRule = this, this.cssRules.splice(r, 0, S), r }; b.CSSGroupingRule.prototype.deleteRule = function (e) { if (e < 0 || e >= this.cssRules.length) { throw new RangeError('INDEX_SIZE_ERR') } this.cssRules.splice(e, 1)[0].parentRule = null }; qe.CSSGroupingRule = b.CSSGroupingRule }); var A = c(Te => { var O = { CSSRule: y().CSSRule, CSSGroupingRule: F().CSSGroupingRule }; O.CSSConditionRule = function () { O.CSSGroupingRule.call(this), this.cssRules = [] }; O.CSSConditionRule.prototype = new O.CSSGroupingRule(); O.CSSConditionRule.prototype.constructor = O.CSSConditionRule; O.CSSConditionRule.prototype.conditionText = ''; O.CSSConditionRule.prototype.cssText = ''; Te.CSSConditionRule = O.CSSConditionRule }); var ee = c(ke => { var E = { CSSRule: y().CSSRule, CSSGroupingRule: F().CSSGroupingRule, CSSConditionRule: A().CSSConditionRule, MediaList: Q().MediaList }; E.CSSMediaRule = function () { E.CSSConditionRule.call(this), this.media = new E.MediaList() }; E.CSSMediaRule.prototype = new E.CSSConditionRule(); E.CSSMediaRule.prototype.constructor = E.CSSMediaRule; E.CSSMediaRule.prototype.type = 4; Object.defineProperties(E.CSSMediaRule.prototype, { conditionText: { get: function () { return this.media.mediaText }, set: function (t) { this.media.mediaText = t }, configurable: !0, enumerable: !0 }, cssText: { get: function () { for (var t = [], e = 0, r = this.cssRules.length; e < r; e++) { t.push(this.cssRules[e].cssText) } return '@media ' + this.media.mediaText + ' {' + t.join('') + '}' }, configurable: !0, enumerable: !0 } }); ke.CSSMediaRule = E.CSSMediaRule }); var te = c(Le => { var q = { CSSRule: y().CSSRule, CSSGroupingRule: F().CSSGroupingRule, CSSConditionRule: A().CSSConditionRule }; q.CSSSupportsRule = function () { q.CSSConditionRule.call(this) }; q.CSSSupportsRule.prototype = new q.CSSConditionRule(); q.CSSSupportsRule.prototype.constructor = q.CSSSupportsRule; q.CSSSupportsRule.prototype.type = 12; Object.defineProperty(q.CSSSupportsRule.prototype, 'cssText', { get: function () { for (var t = [], e = 0, r = this.cssRules.length; e < r; e++) { t.push(this.cssRules[e].cssText) } return '@supports ' + this.conditionText + ' {' + t.join('') + '}' } }); Le.CSSSupportsRule = q.CSSSupportsRule }); var ae = c(Pe => { var w = { CSSStyleDeclaration: D().CSSStyleDeclaration, CSSRule: y().CSSRule }; w.CSSFontFaceRule = function () { w.CSSRule.call(this), this.style = new w.CSSStyleDeclaration(), this.style.parentRule = this }; w.CSSFontFaceRule.prototype = new w.CSSRule(); w.CSSFontFaceRule.prototype.constructor = w.CSSFontFaceRule; w.CSSFontFaceRule.prototype.type = 5; Object.defineProperty(w.CSSFontFaceRule.prototype, 'cssText', { get: function () { return '@font-face {' + this.style.cssText + '}' } }); Pe.CSSFontFaceRule = w.CSSFontFaceRule }); var pe = c(De => { var T = { CSSRule: y().CSSRule }; T.CSSHostRule = function () { T.CSSRule.call(this), this.cssRules = [] }; T.CSSHostRule.prototype = new T.CSSRule(); T.CSSHostRule.prototype.constructor = T.CSSHostRule; T.CSSHostRule.prototype.type = 1001; Object.defineProperty(T.CSSHostRule.prototype, 'cssText', { get: function () { for (var t = [], e = 0, r = this.cssRules.length; e < r; e++) { t.push(this.cssRules[e].cssText) } return '@host {' + t.join('') + '}' } }); De.CSSHostRule = T.CSSHostRule }); var re = c(Fe => { var M = { CSSRule: y().CSSRule, CSSStyleDeclaration: D().CSSStyleDeclaration }; M.CSSKeyframeRule = function () { M.CSSRule.call(this), this.keyText = '', this.style = new M.CSSStyleDeclaration(), this.style.parentRule = this }; M.CSSKeyframeRule.prototype = new M.CSSRule(); M.CSSKeyframeRule.prototype.constructor = M.CSSKeyframeRule; M.CSSKeyframeRule.prototype.type = 8; Object.defineProperty(M.CSSKeyframeRule.prototype, 'cssText', { get: function () { return this.keyText + ' {' + this.style.cssText + '} ' } }); Fe.CSSKeyframeRule = M.CSSKeyframeRule }); var Se = c(Ie => {
  var k = { CSSRule: y().CSSRule }; k.CSSKeyframesRule = function () { k.CSSRule.call(this), this.name = '', this.cssRules = [] }; k.CSSKeyframesRule.prototype = new k.CSSRule(); k.CSSKeyframesRule.prototype.constructor = k.CSSKeyframesRule; k.CSSKeyframesRule.prototype.type = 7; Object.defineProperty(k.CSSKeyframesRule.prototype, 'cssText', { get: function () {
    for (var t = [], e = 0, r = this.cssRules.length; e < r; e++) { t.push('  ' + this.cssRules[e].cssText) } return '@' + (this._vendorPrefix || '') + 'keyframes ' + this.name + ` { 
` + t.join(`
`) + `
}`
  } }); Ie.CSSKeyframesRule = k.CSSKeyframesRule
}); var ce = c(Ae => { var se = {}; se.CSSValue = function () {}; se.CSSValue.prototype = { constructor: se.CSSValue, set cssText (t) { var e = this._getConstructorName(); throw new Error('DOMException: property "cssText" of "' + e + '" is readonly and can not be replaced with "' + t + '"!') }, get cssText () { var t = this._getConstructorName(); throw new Error('getter "cssText" of "' + t + '" is not implemented!') }, _getConstructorName: function () { var t = this.constructor.toString(); var e = t.match(/function\s([^\(]+)/); var r = e[1]; return r } }; Ae.CSSValue = se.CSSValue }); var Re = c(Ve => {
  var x = { CSSValue: ce().CSSValue }; x.CSSValueExpression = function (e, r) { this._token = e, this._idx = r }; x.CSSValueExpression.prototype = new x.CSSValue(); x.CSSValueExpression.prototype.constructor = x.CSSValueExpression; x.CSSValueExpression.prototype.parse = function () { for (var t = this._token, e = this._idx, r = '', S = '', i = '', s, l = []; ;++e) { if (r = t.charAt(e), r === '') { i = 'css expression error: unfinished expression!'; break } switch (r) { case '(':l.push(r), S += r; break; case ')':l.pop(r), S += r; break; case '/':(s = this._parseJSComment(t, e)) ? s.error ? i = 'css expression error: unfinished comment in expression!' : e = s.idx : (s = this._parseJSRexExp(t, e)) ? (e = s.idx, S += s.text) : S += r; break; case "'":case '"':s = this._parseJSString(t, e, r), s ? (e = s.idx, S += s.text) : S += r; break; default:S += r; break } if (i || l.length === 0) { break } } var p; return i ? p = { error: i } : p = { idx: e, expression: S }, p }; x.CSSValueExpression.prototype._parseJSComment = function (t, e) {
    var r = t.charAt(e + 1); var S; if (r === '/' || r === '*') {
      var i = e; var s; var l; if (r === '/' ? l = `
` : r === '*' && (l = '*/'), s = t.indexOf(l, i + 1 + 1), s !== -1) { return s = s + l.length - 1, S = t.substring(e, s + 1), { idx: s, text: S } } var p = 'css expression error: unfinished comment in expression!'; return { error: p }
    } else { return !1 }
  }; x.CSSValueExpression.prototype._parseJSString = function (t, e, r) { var S = this._findMatchedIdx(t, e, r); var i; return S === -1 ? !1 : (i = t.substring(e, S + r.length), { idx: S, text: i }) }; x.CSSValueExpression.prototype._parseJSRexExp = function (t, e) { var r = t.substring(0, e).replace(/\s+$/, ''); var S = [/^$/, /\($/, /\[$/, /\!$/, /\+$/, /\-$/, /\*$/, /\/\s+/, /\%$/, /\=$/, /\>$/, /<$/, /\&$/, /\|$/, /\^$/, /\~$/, /\?$/, /\,$/, /delete$/, /in$/, /instanceof$/, /new$/, /typeof$/, /void$/]; var i = S.some(function (l) { return l.test(r) }); if (i) { var s = '/'; return this._parseJSString(t, e, s) } else { return !1 } }; x.CSSValueExpression.prototype._findMatchedIdx = function (t, e, r) {
    for (var S = e, i, s = -1; ;) { if (i = t.indexOf(r, S + 1), i === -1) { i = s; break } else { var l = t.substring(e + 1, i); var p = l.match(/\\+$/); if (!p || p[0] % 2 === 0) { break } S = i } } var n = t.indexOf(`
`, e + 1); return n < i && (i = s), i
  }; Ve.CSSValueExpression = x.CSSValueExpression
}); var Ce = c(Ke => { var ie = {}; ie.MatcherList = function () { this.length = 0 }; ie.MatcherList.prototype = { constructor: ie.MatcherList, get matcherText () { return Array.prototype.join.call(this, ', ') }, set matcherText (t) { for (var e = t.split(','), r = this.length = e.length, S = 0; S < r; S++) { this[S] = e[S].trim() } }, appendMatcher: function (t) { Array.prototype.indexOf.call(this, t) === -1 && (this[this.length] = t, this.length++) }, deleteMatcher: function (t) { var e = Array.prototype.indexOf.call(this, t); e !== -1 && Array.prototype.splice.call(this, e, 1) } }; Ke.MatcherList = ie.MatcherList }); var fe = c(Ge => { var _ = { CSSRule: y().CSSRule, MatcherList: Ce().MatcherList }; _.CSSDocumentRule = function () { _.CSSRule.call(this), this.matcher = new _.MatcherList(), this.cssRules = [] }; _.CSSDocumentRule.prototype = new _.CSSRule(); _.CSSDocumentRule.prototype.constructor = _.CSSDocumentRule; _.CSSDocumentRule.prototype.type = 10; Object.defineProperty(_.CSSDocumentRule.prototype, 'cssText', { get: function () { for (var t = [], e = 0, r = this.cssRules.length; e < r; e++) { t.push(this.cssRules[e].cssText) } return '@-moz-document ' + this.matcher.matcherText + ' {' + t.join('') + '}' } }); Ge.CSSDocumentRule = _.CSSDocumentRule }); var Z = c(Ue => {
  var o = {}; o.parse = function (e) {
    for (var r = 0, S = 'before-selector', i, s = '', l = 0, p = { selector: !0, value: !0, 'value-parenthesis': !0, atRule: !0, 'importRule-begin': !0, importRule: !0, atBlock: !0, conditionBlock: !0, 'documentRule-begin': !0 }, n = new o.CSSStyleSheet(), a = n, u, v = [], L = !1, he, ue, K = '', f, G, U, $, N, P, I, B, ye = /@(-(?:\w+-)+)?keyframes/g, H = function (Be) {
        var me = e.substring(0, r).split(`
`); var de = me.length; var ve = me.pop().length + 1; var X = new Error(Be + ' (line ' + de + ', char ' + ve + ')'); throw X.line = de, X.char = ve, X.styleSheet = n, X
      }, h; h = e.charAt(r); r++) {
      switch (h) {
        case ' ':case '	':case '\r':case `
`:case '\f':p[S] && (s += h); break; case '"':i = r + 1; do { i = e.indexOf('"', i) + 1, i || H('Unmatched "') } while (e[i - 2] === '\\');switch (s += e.slice(r, i), r = i - 1, S) { case 'before-value':S = 'value'; break; case 'importRule-begin':S = 'importRule'; break } break; case "'":i = r + 1; do { i = e.indexOf("'", i) + 1, i || H("Unmatched '") } while (e[i - 2] === '\\');switch (s += e.slice(r, i), r = i - 1, S) { case 'before-value':S = 'value'; break; case 'importRule-begin':S = 'importRule'; break } break; case '/':e.charAt(r + 1) === '*' ? (r += 2, i = e.indexOf('*/', r), i === -1 ? H('Missing */') : r = i + 1) : s += h, S === 'importRule-begin' && (s += ' ', S = 'importRule'); break; case '@':if (e.indexOf('@-moz-document', r) === r) { S = 'documentRule-begin', I = new o.CSSDocumentRule(), I.__starts = r, r += 13, s = ''; break } else if (e.indexOf('@media', r) === r) { S = 'atBlock', G = new o.CSSMediaRule(), G.__starts = r, r += 5, s = ''; break } else if (e.indexOf('@supports', r) === r) { S = 'conditionBlock', U = new o.CSSSupportsRule(), U.__starts = r, r += 8, s = ''; break } else if (e.indexOf('@host', r) === r) { S = 'hostRule-begin', r += 4, B = new o.CSSHostRule(), B.__starts = r, s = ''; break } else if (e.indexOf('@import', r) === r) { S = 'importRule-begin', r += 6, s += '@import'; break } else if (e.indexOf('@font-face', r) === r) { S = 'fontFaceRule-begin', r += 9, N = new o.CSSFontFaceRule(), N.__starts = r, s = ''; break } else { ye.lastIndex = r; var Y = ye.exec(e); if (Y && Y.index === r) { S = 'keyframesRule-begin', P = new o.CSSKeyframesRule(), P.__starts = r, P._vendorPrefix = Y[1], r += Y[0].length - 1, s = ''; break } else { S === 'selector' && (S = 'atRule') } }s += h; break; case '{':S === 'selector' || S === 'atRule' ? (f.selectorText = s.trim(), f.style.__starts = r, s = '', S = 'before-name') : S === 'atBlock' ? (G.media.mediaText = s.trim(), u && v.push(u), a = u = G, G.parentStyleSheet = n, s = '', S = 'before-selector') : S === 'conditionBlock' ? (U.conditionText = s.trim(), u && v.push(u), a = u = U, U.parentStyleSheet = n, s = '', S = 'before-selector') : S === 'hostRule-begin' ? (u && v.push(u), a = u = B, B.parentStyleSheet = n, s = '', S = 'before-selector') : S === 'fontFaceRule-begin' ? (u && (N.parentRule = u), N.parentStyleSheet = n, f = N, s = '', S = 'before-name') : S === 'keyframesRule-begin' ? (P.name = s.trim(), u && (v.push(u), P.parentRule = u), P.parentStyleSheet = n, a = u = P, s = '', S = 'keyframeRule-begin') : S === 'keyframeRule-begin' ? (f = new o.CSSKeyframeRule(), f.keyText = s.trim(), f.__starts = r, s = '', S = 'before-name') : S === 'documentRule-begin' && (I.matcher.matcherText = s.trim(), u && (v.push(u), I.parentRule = u), a = u = I, I.parentStyleSheet = n, s = '', S = 'before-selector'); break; case ':':S === 'name' ? (ue = s.trim(), s = '', S = 'before-value') : s += h; break; case '(':if (S === 'value') { if (s.trim() === 'expression') { var W = new o.CSSValueExpression(e, r).parse(); W.error ? H(W.error) : (s += W.expression, r = W.idx) } else { S = 'value-parenthesis', l = 1, s += h } } else { S === 'value-parenthesis' && l++, s += h } break; case ')':S === 'value-parenthesis' && (l--, l === 0 && (S = 'value')), s += h; break; case '!':S === 'value' && e.indexOf('!important', r) === r ? (K = 'important', r += 9) : s += h; break; case ';':switch (S) { case 'value':f.style.setProperty(ue, s.trim(), K), K = '', s = '', S = 'before-name'; break; case 'atRule':s = '', S = 'before-selector'; break; case 'importRule':$ = new o.CSSImportRule(), $.parentStyleSheet = $.styleSheet.parentStyleSheet = n, $.cssText = s + h, n.cssRules.push($), s = '', S = 'before-selector'; break; default:s += h; break } break; case '}':switch (S) { case 'value':f.style.setProperty(ue, s.trim(), K), K = ''; case 'before-name':case 'name':f.__ends = r + 1, u && (f.parentRule = u), f.parentStyleSheet = n, a.cssRules.push(f), s = '', a.constructor === o.CSSKeyframesRule ? S = 'keyframeRule-begin' : S = 'before-selector'; break; case 'keyframeRule-begin':case 'before-selector':case 'selector':for (u || H('Unexpected }'), L = v.length > 0; v.length > 0;) { if (u = v.pop(), u.constructor.name === 'CSSMediaRule' || u.constructor.name === 'CSSSupportsRule') { he = a, a = u, a.cssRules.push(he); break }v.length === 0 && (L = !1) }L || (a.__ends = r + 1, n.cssRules.push(a), a = n, u = null), s = '', S = 'before-selector'; break } break; default:switch (S) { case 'before-selector':S = 'selector', f = new o.CSSStyleRule(), f.__starts = r; break; case 'before-name':S = 'name'; break; case 'before-value':S = 'value'; break; case 'importRule-begin':S = 'importRule'; break }s += h; break
      }
    } return n
  }; Ue.parse = o.parse; o.CSSStyleSheet = J().CSSStyleSheet; o.CSSStyleRule = j().CSSStyleRule; o.CSSImportRule = ne().CSSImportRule; o.CSSGroupingRule = F().CSSGroupingRule; o.CSSMediaRule = ee().CSSMediaRule; o.CSSConditionRule = A().CSSConditionRule; o.CSSSupportsRule = te().CSSSupportsRule; o.CSSFontFaceRule = ae().CSSFontFaceRule; o.CSSHostRule = pe().CSSHostRule; o.CSSStyleDeclaration = D().CSSStyleDeclaration; o.CSSKeyframeRule = re().CSSKeyframeRule; o.CSSKeyframesRule = Se().CSSKeyframesRule; o.CSSValueExpression = Re().CSSValueExpression; o.CSSDocumentRule = fe().CSSDocumentRule
}); var D = c($e => { var V = {}; V.CSSStyleDeclaration = function () { this.length = 0, this.parentRule = null, this._importants = {} }; V.CSSStyleDeclaration.prototype = { constructor: V.CSSStyleDeclaration, getPropertyValue: function (t) { return this[t] || '' }, setProperty: function (t, e, r) { if (this[t]) { var S = Array.prototype.indexOf.call(this, t); S < 0 && (this[this.length] = t, this.length++) } else { this[this.length] = t, this.length++ } this[t] = e + '', this._importants[t] = r }, removeProperty: function (t) { if (!(t in this)) { return '' } var e = Array.prototype.indexOf.call(this, t); if (e < 0) { return '' } var r = this[t]; return this[t] = '', Array.prototype.splice.call(this, e, 1), r }, getPropertyCSSValue: function () {}, getPropertyPriority: function (t) { return this._importants[t] || '' }, getPropertyShorthand: function () {}, isPropertyImplicit: function () {}, get cssText () { for (var t = [], e = 0, r = this.length; e < r; ++e) { var S = this[e]; var i = this.getPropertyValue(S); var s = this.getPropertyPriority(S); s && (s = ' !' + s), t[e] = S + ': ' + i + s + ';' } return t.join(' ') }, set cssText (t) { var e, r; for (e = this.length; e--;) { r = this[e], this[r] = '' }Array.prototype.splice.call(this, 0, this.length), this._importants = {}; var S = V.parse('#bogus{' + t + '}').cssRules[0].style; var i = S.length; for (e = 0; e < i; ++e) { r = S[e], this.setProperty(S[e], S.getPropertyValue(r), S.getPropertyPriority(r)) } } }; $e.CSSStyleDeclaration = V.CSSStyleDeclaration; V.parse = Z().parse }); var He = c(Ne => {
  var le = { CSSStyleSheet: J().CSSStyleSheet, CSSRule: y().CSSRule, CSSStyleRule: j().CSSStyleRule, CSSGroupingRule: F().CSSGroupingRule, CSSConditionRule: A().CSSConditionRule, CSSMediaRule: ee().CSSMediaRule, CSSSupportsRule: te().CSSSupportsRule, CSSStyleDeclaration: D().CSSStyleDeclaration, CSSKeyframeRule: re().CSSKeyframeRule, CSSKeyframesRule: Se().CSSKeyframesRule }; le.clone = function t (e) {
    var r = new le.CSSStyleSheet(); var
      S = e.cssRules; if (!S) { return r } for (var i = 0, s = S.length; i < s; i++) { var l = S[i]; var p = r.cssRules[i] = new l.constructor(); var n = l.style; if (n) { for (var a = p.style = new le.CSSStyleDeclaration(), u = 0, v = n.length; u < v; u++) { var L = a[u] = n[u]; a[L] = n[L], a._importants[L] = n.getPropertyPriority(L) }a.length = n.length }l.hasOwnProperty('keyText') && (p.keyText = l.keyText), l.hasOwnProperty('selectorText') && (p.selectorText = l.selectorText), l.hasOwnProperty('mediaText') && (p.mediaText = l.mediaText), l.hasOwnProperty('conditionText') && (p.conditionText = l.conditionText), l.hasOwnProperty('cssRules') && (p.cssRules = t(l).cssRules) } return r
  }; Ne.clone = le.clone
}); var je = c(R => { 'use strict'; R.CSSStyleDeclaration = D().CSSStyleDeclaration; R.CSSRule = y().CSSRule; R.CSSGroupingRule = F().CSSGroupingRule; R.CSSConditionRule = A().CSSConditionRule; R.CSSStyleRule = j().CSSStyleRule; R.MediaList = Q().MediaList; R.CSSMediaRule = ee().CSSMediaRule; R.CSSSupportsRule = te().CSSSupportsRule; R.CSSImportRule = ne().CSSImportRule; R.CSSFontFaceRule = ae().CSSFontFaceRule; R.CSSHostRule = pe().CSSHostRule; R.StyleSheet = oe().StyleSheet; R.CSSStyleSheet = J().CSSStyleSheet; R.CSSKeyframesRule = Se().CSSKeyframesRule; R.CSSKeyframeRule = re().CSSKeyframeRule; R.MatcherList = Ce().MatcherList; R.CSSDocumentRule = fe().CSSDocumentRule; R.CSSValue = ce().CSSValue; R.CSSValueExpression = Re().CSSValueExpression; R.parse = Z().parse; R.clone = He().clone }); var Je = et(je(), 1); var Et = Je.default; export { Et as default }
// # sourceMappingURL=cssom.esm.js.map
