{
  "version": 3,
  "sources": ["../../index.js", "index.js"],
  "sourcesContent": ["const s = Symbol.for('skruvDom')\nconst eventPrefix = 'data-event-'\n/**\n * @typedef {Vnode|Vnode[]|String|Boolean|Number} SkruvChildNode\n * @typedef {SkruvChildNode[]} SkruvChildNodes\n */\n/**\n * @typedef {object} Vnode\n * @prop {Symbol} s\n * @prop {String} t\n * @prop {SkruvChildNodes} c\n * @prop {Record<string,(string|boolean|Function|number|Object)> & {_r:{_r:() => boolean}?}} a\n * @prop {{_r:() => boolean}} [_r]\n */\n/** @type {Vnode} */\nexport const Vnode = { s, t: '', c: [], a: { _r: { _r: () => false } } }\n/**\n * @param {string} t\n * @param  {(Record<string, any>|Vnode)[]} c\n * @returns {Vnode}\n */\n// @ts-ignore: TODO: The check for non-attribute objects does not satisfy TS\nexport const h = (t, ...c) => ({\n  s,\n  t: t.toUpperCase(),\n  ...(\n    // @ts-ignore: its exactly because we don't know if its there that we check it\n    !(c[0]?.[Symbol.asyncIterator]) &&\n        c[0]?.constructor === Object &&\n      c[0]?.s !== s\n      ? {\n        a: c[0],\n        c: c.slice(1)\n      }\n      : {\n        a: {},\n        c: c\n      }\n  )\n})\n\n/** @type {WeakMap<Vnode, Node>} */\nconst keyed = new WeakMap()\n/** @type {Record<string, Node>} */\nconst domCache = {}\n/**\n * @param {Vnode} current\n * @param {Node} _currentNode\n * @param {ParentNode?} parentNode\n * @param {*} isSvg\n * @returns {boolean}\n */\nexport const render = (\n  current,\n  _currentNode = globalThis.document.documentElement,\n  parentNode = _currentNode.parentNode,\n  isSvg = false,\n  doc = (parentNode?.ownerDocument || _currentNode?.ownerDocument)\n) => {\n  let currentNode = _currentNode\n  /** @type {ChildNode[]|NodeList} */\n  let childNodes = []\n  if (!parentNode || !doc || (currentNode && !parentNode.contains(currentNode))) { return false }\n  if (typeof current === 'boolean' || current === null || current === undefined) {\n    if (currentNode) { parentNode.removeChild(currentNode) }\n    return true\n  }\n  if (\n    !currentNode ||\n    (\n      ((typeof current === 'string' || typeof current === 'number') && currentNode?.nodeName !== '#text') ||\n      (current?.t && currentNode?.nodeName !== current?.t) ||\n      // @ts-ignore: TODO: Handle key storage better\n      (currentNode?._skruvKey !== current?.a?._key)\n    )\n  ) {\n    if (typeof current === 'string' || typeof current === 'number') {\n      currentNode = (domCache.text || (domCache.text = doc.createTextNode(''))).cloneNode()\n    } else if (isSvg || current.t === 'svg') {\n      currentNode = (domCache[current.t] || (domCache[current.t] = doc.createElementNS('http://www.w3.org/2000/svg', current.t))).cloneNode()\n    } else {\n      currentNode = (domCache[current.t] || (domCache[current.t] = doc.createElement(current.t))).cloneNode()\n    }\n    if (_currentNode) {\n      parentNode.replaceChild(currentNode, _currentNode)\n    } else {\n      parentNode.appendChild(currentNode)\n    }\n    // @ts-ignore: see above\n    if (current?.a?._key) { currentNode._skruvKey = current?.a?._key }\n    // @ts-ignore: oncreate should always be callable. TODO: add strict typing\n    if (current?.a?.oncreate) { current?.a?.oncreate(currentNode) }\n  } else {\n    childNodes = currentNode.childNodes\n  }\n  if ((typeof current === 'string' || typeof current === 'number')) {\n    // @ts-ignore: We already checked this above. It's not 'never'\n    if (('' + currentNode.data) !== ('' + current)) { currentNode.data = current }\n    return true\n  }\n  if (current._r) { current._r._r = () => render(current, currentNode, parentNode, isSvg) }\n  for (const key in current.a) {\n    if (key[0] === '_') { continue }\n    if (key[0] === 'o' && key[1] === 'n') {\n      // @ts-ignore: TODO: this is a hacky way to store what the last eventlistener was\n      if (!currentNode[eventPrefix + key] || ('' + currentNode[eventPrefix + key]) !== ('' + current.a[key])) {\n        // @ts-ignore: See above\n        if (currentNode[eventPrefix + key]) { currentNode.removeEventListener(key.slice(2), currentNode[eventPrefix + key]) }\n        // @ts-ignore: See above\n        currentNode.addEventListener(key.slice(2), current.a[key])\n        // @ts-ignore: See above\n        currentNode[eventPrefix + key] = current.a[key]\n      } else if (!current.a[key]) {\n        // @ts-ignore: data-event-* is the old function\n        currentNode.removeEventListener(key.slice(2), currentNode[eventPrefix + key])\n      }\n    // @ts-ignore: If this was a text or comment element we would have returned above\n    } else if (current.a[key] !== currentNode.getAttribute(key)) {\n      if (\n        (\n          typeof current.a[key] === 'boolean' &&\n          (\n            (current.t === 'INPUT' && key === 'checked') ||\n            (current.t === 'OPTION' && key === 'selected')\n          )\n        ) || typeof current.a[key] === 'object' // Support complex data passing for custom elements\n      ) {\n        // @ts-ignore TS does not think HTML properties are accessible directly?\n        currentNode[key] = current.a[key]\n      }\n      if (current.a[key]) {\n        // @ts-ignore: If this was a text or comment element we would have returned above\n        currentNode.setAttribute(key, '' + current.a[key])\n      } else {\n        // @ts-ignore: If this was a text or comment element we would have returned above\n        currentNode.removeAttribute(key)\n      }\n    }\n  }\n  const children = current.c.flat(Infinity)\n  if (!children.length && childNodes.length) {\n    if (current.a['data-skruv-wait-for-not-empty']) {\n      return true\n    }\n    // @ts-ignore: If this was a text or comment element we would have returned above\n    currentNode.replaceChildren()\n    return true\n  }\n  if (childNodes.length > children.length) {\n    for (let i = children.length; i < childNodes.length; i++) {\n      currentNode.removeChild(childNodes[i])\n    }\n  }\n  for (let i = 0; i < children.length; i++) {\n    // @ts-ignore: TODO: the flattening seems to confuse TS\n    if (keyed.has(children[i])) {\n      // @ts-ignore: See above\n      const keyedNode = keyed.get(children[i])\n      if (keyedNode && keyedNode !== childNodes[i]) {\n        if (keyedNode === childNodes[i + 1]) {\n          currentNode.removeChild(childNodes[i])\n        // @ts-ignore: See above\n        } else if (keyed.has(children[i + 1]) && keyed.get(children[i + 1]) === childNodes[i]) {\n          currentNode.insertBefore(keyedNode, childNodes[i])\n        } else if (childNodes[i]) {\n          currentNode.replaceChild(keyedNode, childNodes[i])\n        } else {\n          currentNode.appendChild(keyedNode)\n        }\n        // @ts-ignore: See above\n        keyed.set(children[i], childNodes[i])\n      }\n      continue\n    }\n    // @ts-ignore: See above\n    render(children[i], childNodes[i] || false, currentNode, isSvg)\n  }\n  keyed.set(current, currentNode)\n  return true\n}\n\nexport const elementFactory = new Proxy({}, {\n  /** @type {(_: any, name: string) => (arg0: (Record<string, any>|Vnode)[]) => Vnode} */\n  get: (_, name) => (...c) => h(name, ...c)\n})\n", "import { elementFactory, render } from '../../index.js'\n\nconst { html, head, title, meta, body, main, h1, form, input, button, ol, li, a, style } = elementFactory\n\nconst state = {\n  todos: ['Write todos']\n}\n\nconst styles = /* css */`:scope{color:#f1f1f1;background:#0f0f0f}body{max-width:40ch;margin:0 auto}form{display:flex}input{flex:1}a{color:#9b9b9b}`\n\nconst doRender = () => render(\n  html({ lang: 'en-US' },\n    head(\n      title(state.todos[0]),\n      meta({ name: 'viewport', content: 'width=device-width, initial-scale=1' }),\n      style(styles)\n    ),\n    body(\n      main(\n        h1(state.todos[0]),\n        form({\n          onsubmit: e => {\n            e.preventDefault()\n            state.todos.unshift(new FormData(e.target).get('todo'))\n            e.target.reset()\n            doRender()\n          }\n        },\n        input({\n          name: 'todo'\n        }),\n        button('New!')\n        ),\n        ol(\n          state.todos.map((todo, i) => li(\n            `${todo} `,\n            a({\n              href: '#',\n              onclick: e => {\n                e.preventDefault()\n                state.todos.splice(i, 1)\n                doRender()\n              }\n            }, 'x')\n          ))\n        )\n      )\n    )\n  )\n)\ndoRender()\n"],
  "mappings": "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",
  "names": ["s", "eventPrefix", "h", "t", "c", "_a", "_b", "_c", "s", "keyed", "domCache", "render", "current", "_currentNode", "parentNode", "isSvg", "doc", "_d", "_e", "currentNode", "childNodes", "key", "eventPrefix", "children", "i", "keyedNode", "elementFactory", "_", "name", "html", "head", "title", "meta", "body", "main", "h1", "form", "input", "button", "ol", "li", "a", "style", "elementFactory", "state", "styles", "doRender", "render", "todo", "e"]
}
